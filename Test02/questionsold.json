[
    {
        "category": "top/002_LURET Python_niveau2",
        "questions": []
    },
    {
        "category": "top/002_LURET Python_niveau2/Fonctions",
        "questions": []
    },
    {
        "category": "top/002_LURET Python_niveau2/Fonctions/paramètre optionnel",
        "questions": [
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=1, b=2, c=3):\n    return a + b + c\n\nresultat = fonction_travail()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "6",
                        "fraction": 100
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "5",
                        "fraction": 0
                    },
                    {
                        "text": "4",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(x=2, y=3):\n    return x * y\n\nresultat = fonction_travail(y=4)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "8",
                        "fraction": 100
                    },
                    {
                        "text": "6",
                        "fraction": 0
                    },
                    {
                        "text": "12",
                        "fraction": 0
                    },
                    {
                        "text": "2",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=10, b=2):\n    return a / b\n\nresultat = fonction_travail(b=5)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "2.0",
                        "fraction": 100
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "5",
                        "fraction": 0
                    },
                    {
                        "text": "0.4",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(base=2, exposant=3):\n    return base ** exposant\n\nresultat = fonction_travail(exposant=4)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "16",
                        "fraction": 100
                    },
                    {
                        "text": "8",
                        "fraction": 0
                    },
                    {
                        "text": "32",
                        "fraction": 0
                    },
                    {
                        "text": "4",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=10, b=5, c=2):\n    return a - b - c\n\nresultat = fonction_travail(c=1)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "4",
                        "fraction": 100
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "5",
                        "fraction": 0
                    },
                    {
                        "text": "6",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=10, b=3):\n    return a % b\n\nresultat = fonction_travail(a=11)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "2",
                        "fraction": 100
                    },
                    {
                        "text": "1",
                        "fraction": 0
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "0",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a='bon', b='jour'):\n    return a + b\n\nresultat = fonction_travail(a='salut')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "salutjour",
                        "fraction": 100
                    },
                    {
                        "text": "bonjour",
                        "fraction": 0
                    },
                    {
                        "text": "salut",
                        "fraction": 0
                    },
                    {
                        "text": "jour",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=5, b=10, c=3):\n    return min(a, b, c)\n\nresultat = fonction_travail(b=2)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "2",
                        "fraction": 100
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "5",
                        "fraction": 0
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=5, b=10, c=3):\n    return max(a, b, c)\n\nresultat = fonction_travail(c=15)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "15",
                        "fraction": 100
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "5",
                        "fraction": 0
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\ndef fonction_travail(a=10, b=20, c=30):\n    return (a + b + c) / 3\n\nresultat = fonction_travail(b=40)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>26.666666666666668</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>20.6</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>30</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=16):\n    return a ** 0.5\n\nresultat = fonction_travail()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "4.0",
                        "fraction": 100
                    },
                    {
                        "text": "16",
                        "fraction": 0
                    },
                    {
                        "text": "2",
                        "fraction": 0
                    },
                    {
                        "text": "8",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=4):\n    return a % 2 == 0\n\nresultat = fonction_travail(a=7)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "False",
                        "fraction": 100
                    },
                    {
                        "text": "True",
                        "fraction": 0
                    },
                    {
                        "text": "0",
                        "fraction": 0
                    },
                    {
                        "text": "1",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(n=5):\n    if n == 0:\n        return 1\n    else:\n        return n * fonction_travail(n-1)\n\nresultat = fonction_travail(n=3)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "6",
                        "fraction": 100
                    },
                    {
                        "text": "24",
                        "fraction": 0
                    },
                    {
                        "text": "120",
                        "fraction": 0
                    },
                    {
                        "text": "5",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=10, b=5):\n    return a > b\n\nresultat = fonction_travail(b=20)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "False",
                        "fraction": 100
                    },
                    {
                        "text": "True",
                        "fraction": 0
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "5",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=2):\n    return a * 2\n\nresultat = fonction_travail(a=5)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "10",
                        "fraction": 100
                    },
                    {
                        "text": "4",
                        "fraction": 0
                    },
                    {
                        "text": "2",
                        "fraction": 0
                    },
                    {
                        "text": "5",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(a=1, b=0):\n    return b, a\n\nresultat = fonction_travail(b=2)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "(2, 1)",
                        "fraction": 100
                    },
                    {
                        "text": "(1, 0)",
                        "fraction": 0
                    },
                    {
                        "text": "(0, 1)",
                        "fraction": 0
                    },
                    {
                        "text": "(1, 2)",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='hello'):\n    return len(s)\n\nresultat = fonction_travail(s='world')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "5",
                        "fraction": 100
                    },
                    {
                        "text": "6",
                        "fraction": 0
                    },
                    {
                        "text": "4",
                        "fraction": 0
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\ndef fonction_travail(s='bonjour'):\n    return s.upper()\n\nresultat = fonction_travail()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>BONJOUR</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>bonjour</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Bonjour</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>BonJour</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='BONJOUR'):\n    return s.lower()\n\nresultat = fonction_travail(s='HELLO')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "hello",
                        "fraction": 100
                    },
                    {
                        "text": "HELLO",
                        "fraction": 0
                    },
                    {
                        "text": "Hello",
                        "fraction": 0
                    },
                    {
                        "text": "bonjour",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='bonjour', ancien='bon', nouveau='salut'):\n    return s.replace(ancien, nouveau)\n\nresultat = fonction_travail(ancien='jour')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "bonsalut",
                        "fraction": 100
                    },
                    {
                        "text": "bonjour",
                        "fraction": 0
                    },
                    {
                        "text": "salut",
                        "fraction": 0
                    },
                    {
                        "text": "jour",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='radar'):\n    return s == s[::-1]\n\nresultat = fonction_travail(s='level')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "True",
                        "fraction": 100
                    },
                    {
                        "text": "False",
                        "fraction": 0
                    },
                    {
                        "text": "radar",
                        "fraction": 0
                    },
                    {
                        "text": "level",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='hello'):\n    return s[::-1]\n\nresultat = fonction_travail(s='world')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "dlrow",
                        "fraction": 100
                    },
                    {
                        "text": "olleh",
                        "fraction": 0
                    },
                    {
                        "text": "world",
                        "fraction": 0
                    },
                    {
                        "text": "hello",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='bonjour tout le monde'):\n    return len(s.split())\n\nresultat = fonction_travail(s='hello world')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "2",
                        "fraction": 100
                    },
                    {
                        "text": "4",
                        "fraction": 0
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "1",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='bonjour'):\n    return s.capitalize()\n\nresultat = fonction_travail(s='HELLO')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Hello",
                        "fraction": 100
                    },
                    {
                        "text": "hello",
                        "fraction": 0
                    },
                    {
                        "text": "HELLO",
                        "fraction": 0
                    },
                    {
                        "text": "Bonjour",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='bonjour', sous_chaine='jour'):\n    return s.find(sous_chaine)\n\nresultat = fonction_travail(s='hello', sous_chaine='ell')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "1",
                        "fraction": 100
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "-1",
                        "fraction": 0
                    },
                    {
                        "text": "2",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s=''):\n    return len(s) == 0\n\nresultat = fonction_travail(s=' ')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "False",
                        "fraction": 100
                    },
                    {
                        "text": "True",
                        "fraction": 0
                    },
                    {
                        "text": "0",
                        "fraction": 0
                    },
                    {
                        "text": "1",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\ndef fonction_travail(s=' bonjour '):\n    return s.strip()\n\nresultat = fonction_travail(s=' hello ')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>'hello'</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>' hello '</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>'hello '</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[h,e,l,l,o]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='bonjour tout le monde', remplacement='_'):\n    return s.replace(' ', remplacement)\n\nresultat = fonction_travail(s='hello world', remplacement='-')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "hello-world",
                        "fraction": 100
                    },
                    {
                        "text": "hello world",
                        "fraction": 0
                    },
                    {
                        "text": "hello_world",
                        "fraction": 0
                    },
                    {
                        "text": "bonjour_tout_le_monde",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(fichier='document.txt'):\n    return fichier.split('.')[-1]\n\nresultat = fonction_travail(fichier='image.png')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "png",
                        "fraction": 100
                    },
                    {
                        "text": "txt",
                        "fraction": 0
                    },
                    {
                        "text": "image",
                        "fraction": 0
                    },
                    {
                        "text": "document",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait la fonction suivante lorsqu'elle est appelée avec un seul argument ?</p>\n<pre><code>\ndef fonction_test(param1=10):\n    return param1 * 2\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Elle retourne 20 si aucun argument n'est passé</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Elle retourne une erreur</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Elle retourne 10 si aucun argument n'est passé</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Elle retourne 2 si aucun argument n'est passé</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la valeur de 'resultat' après l'exécution du code suivant ?\n<pre><code>\ndef fonction_test(param1=5, param2=10):\nreturn param1 + param2\nresultat = fonction_test(3)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "13",
                        "fraction": 100
                    },
                    {
                        "text": "15",
                        "fraction": 0
                    },
                    {
                        "text": "8",
                        "fraction": 0
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Dans le code suivant, quelle sera la sortie si aucune valeur n'est passée à 'param3' ?\n<pre><code>\ndef fonction_test(param1=1, param2=2, param3=3):\nreturn param1 * param2 * param3\nprint(fonction_test())\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "6",
                        "fraction": 100
                    },
                    {
                        "text": "1",
                        "fraction": 0
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "9",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'x' après l'exécution de ce code ?</p>\n<pre><code>\ndef fonction_test(x=0, y=1):\n    return x + y<br>\n\nx = fonction_test(y=5)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>5</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>1</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>6</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code ?</p>\n<pre><code>\ndef fonction_test(a=10, b=20):\n    return a &gt; b\n\nprint(fonction_test())\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>False</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>True</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>None</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de cette fonction si on passe seulement 'b' ?</p>\n<pre><code>\ndef fonction_test(a=1, b=2, c=3):\n    return a + b + c\n\nprint(fonction_test(b=5))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>9</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>8</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>6</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'appel de cette fonction sans argument ?</p>\n<pre><code>\ndef fonction_test(valeur=10):\n    return valeur * 2\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>20</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>None</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'total' après l'exécution de ce code ?</p>\n<pre><code>\ndef fonction_test(a=1, b=2):\n    return a + b\n\ntotal = fonction_test(3, b=4)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>7</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>5</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>6</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>8</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel sera le résultat de cette fonction si aucun argument n'est fourni ?</p>\n<pre><code>\ndef fonction_test(multiplicateur=5):\n    return 2 * multiplicateur\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>10</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>5</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur retournée par cette fonction avec un seul argument ?</p>\n<pre><code>\ndef fonction_test(base=10, exposant=2):\n    return base ** exposant\n\nprint(fonction_test(3))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>9</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>6</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>3</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment se comporte la fonction si 'b' est omis ?</p>\n<pre><code>\ndef fonction_test(a=1, b=2, c=3):\n    return a + b + c\n\nprint(fonction_test(10))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>15</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>13</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>12</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>11</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est l'affichage de cette fonction sans argument ?</p>\n<pre><code>\ndef fonction_test(message=\"Bonjour\"):\n    print(message)\n\nfonction_test()\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Bonjour</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Aucun affichage</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>None</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le retour de cette fonction si aucun argument n'est spécifié ?</p>\n<pre><code>\ndef fonction_test(x=0, y=1, z=2):\n    return x - y + z\n\nprint(fonction_test())\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>1</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>-1</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>2</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Qu'est-ce que cette fonction retourne si on ne passe que 'b' en argument ?</p>\n<pre><code>\ndef fonction_test(a=1, b=2):\n    return a * b\n\nprint(fonction_test(b=4))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>4</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>8</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>1</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait cette fonction si aucun argument n'est fourni ?</p>\n<pre><code>\ndef fonction_test(nombre=100):\n    return nombre // 2\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>50</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>100</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de ce code avec seulement 'param2' spécifié ?</p>\n<pre><code>\ndef fonction_test(param1=1, param2=2):\n    return param1 + param2\n\nprint(fonction_test(param2=5))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>6</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>7</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>5</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>3</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'resultat' après cette exécution ?</p>\n<pre><code>\ndef fonction_test(valeur=10):\n    return valeur * valeur\n\nresultat = fonction_test()\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>100</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>20</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait cette fonction si aucun paramètre n'est donné ?</p>\n<pre><code>\ndef fonction_test(start=0, end=10):\n    return list(range(start, end))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[0]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel sera le résultat de cette fonction appelée sans argument ?</p>\n<pre><code>\ndef fonction_test(a=2, b=3):\n     return a % b\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>2</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>3</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>1</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de cette fonction sans paramètre ?</p>\n<pre><code>\ndef fonction_test(text=\"Python\"):\n    print(text.upper())\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>PYTHON</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Python</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Aucun affichage</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat si on ne passe que 'b' ?</p>\n<pre><code>\ndef fonction_test(a=1, b=2):\n    return a - b\n\nprint(fonction_test(b=3))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>-2</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>-1</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>1</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>2</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'output' ici ?</p>\n<pre><code>\ndef fonction_test(x=1, y=2):\n    return x * y\n\noutput = fonction_test(x=3)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>6</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>3</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>1</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que retourne cette fonction sans argument ?</p>\n<pre><code>\ndef fonction_test(base=5):\n    return base ** 2\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>25</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>5</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code ?</p>\n<pre><code>\ndef fonction_test(message=\"Hello\"):\n    return message * 2\n\nprint(fonction_test())\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>HelloHello</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Hello</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>HelloHelloHello</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'result' après l'exécution ?</p>\n<pre><code>\ndef fonction_test(a=1, b=2, c=3):\n    return a + b + c\n\nresult = fonction_test(c=5)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>8</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>7</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>6</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>5</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'x' après cette exécution ?</p>\n<pre><code>\ndef fonction_test(x=0, y=1):\n    x += y\n    return x\n\nx = fonction_test(y=5)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>5</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>6</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>1</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de cette fonction appelée sans argument ?</p>\n<pre><code>\ndef fonction_test(liste=[1, 2, 3]):\n    return sum(liste)\n\nprint(fonction_test())\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>6</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>3</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'résultat' après cette exécution atypique ?</p>\n<pre><code>\ndef fonction_test(a=1, b=2):\n    if a &gt; b:\n        return a\n    return b * b\n\nrésultat = fonction_test(b=5)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>25</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>1</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>5</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le message affiché par cette fonction si aucun paramètre n'est passé ?</p>\n<pre><code>\ndef fonction_test(texte=\"Bienvenue\", répétition=1):\n    for _ in range(répétition):\n        print(texte)\n\nfonction_test(répétition=3)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Bienvenue Bienvenue Bienvenue</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Bienvenue</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Aucun affichage</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la liste retournée si aucun paramètre n'est fourni ?</p>\n<pre><code>\ndef fonction_test(début=1, fin=5, pas=1):\n    return list(range(début, fin, pas))\n\nprint(fonction_test(pas=2))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[1, 3]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 2, 3, 4]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que renvoie cette fonction ?</p>\n<pre><code>\ndef fonction_test(longueur=10):\n    return \"*\" * longueur\n\nprint(fonction_test(longueur=5))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>*****</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>**********</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Aucun affichage</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'z' après cette séquence de code ?</p>\n<pre><code>\ndef fonction_test(x=1, y=2):\n    return x * y, x + y\n\nz = fonction_test(x=3)[1]\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>5</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>6</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>3</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>(3, 5)</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de cette fonction si aucun argument n'est passé ?</p>\n<pre><code>\ndef fonction_test(base=7, hauteur=3):\n    return base * hauteur / 2\n\nprint(fonction_test())\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>10.5</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>21</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>3.5</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>7</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de cette fonction si 'chiffre' n'est pas spécifié ?</p>\n<pre><code>\ndef fonction_test(chiffre=0):\n    if chiffre % 2 == 0:\n        return \"Pair\"\n    else:\n        return \"Impair\"\n\nprint(fonction_test())\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Pair</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Impair</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'résultat' après cette exécution ?</p>\n<pre><code>\ndef fonction_test(a=1, b=2):\n    return a if a &gt; b else b\n\nrésultat = fonction_test(a=5, b=5)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>5</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>1</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat si 'répétition' n'est pas fourni ?</p>\n<pre><code>\ndef fonction_test(mot=\"Python\", répétition=3):\n    return mot * répétition\n\nprint(fonction_test(répétition=2))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>PythonPython</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>PythonPythonPython</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Python</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de 'final' après cette opération ?</p>\n<pre><code>\ndef fonction_test(valeur=10, multiplicateur=2):\n    return valeur * multiplicateur\n\nfinal = fonction_test(valeur=5, multiplicateur=3) - fonction_test()\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>-5</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>30</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que se passe-t-il quand on appelle cette fonction sans arguments ?\n<pre><code>\ndef fonction_test(a=0, b=1):\nprint(f\"a: , b: {b}\")\n</code></pre>\n{\n~%100%Elle affiche \"a: 0, b: 1\"\n~Elle affiche \"a: None, b: None\"\n~Elle affiche \"a: 1, b: 0\"\n~Elle génère une erreur\n}",
                "type": "shortanswer",
                "answers": [
                    {
                        "text": "a",
                        "fraction": 100
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait la fonction suivante si on ne lui passe aucun argument ?\n<pre><code>\ndef fonction_test(nom=\"inconnu\", age=0):\nprint(f\"Nom: , Age: {age}\")\n</code></pre>\n{\n~%100%Elle affiche \"Nom: inconnu, Age: 0\"\n~Elle affiche \"Nom: , Age: \"\n~Elle affiche \"Nom: inconnu, Age: inconnu\"\n~Erreur\n}",
                "type": "shortanswer",
                "answers": [
                    {
                        "text": "nom",
                        "fraction": 100
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie de ce code ?\n<pre><code>\ndef fonction_test(nom=\"inconnu\", age=0):\nprint(f\"Nom: , Âge: {age}\")\nfonction_test(\"Alice\")\n</code></pre>\n{\n~%100%Nom: Alice, Âge: 0\n~Nom: inconnu, Âge: 0\n~Nom: Alice, Âge: inconnu\n~Erreur\n}",
                "type": "shortanswer",
                "answers": [
                    {
                        "text": "nom",
                        "fraction": 100
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Portée des variables",
        "questions": [
            {
                "text": "<p>Quelle est la sortie de ce code ?</p>\n<pre><code>\nx = 10\ndef fonction():\n    x = 5\n    print(x)\n\n\nfonction()\nprint(x)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "5\n10",
                        "fraction": 100
                    },
                    {
                        "text": "10\n5",
                        "fraction": 0
                    },
                    {
                        "text": "5\n5",
                        "fraction": 0
                    },
                    {
                        "text": "10\n10",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?<pre><code>\ndef afficher_variables():\n    x = 10\n    print(x)\n\nafficher_variables()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>10</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>None</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>x</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\nx = 5\ndef fonction():\n    global x\n    x = 10\n    def interne():\n        nonlocal x\n        x = 20\n    interne()\n\nfonction()\nprint(x)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>5</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>10</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>SyntaxError: no binding for nonlocal</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>20</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la portée de la variable 'f' dans ce code ?</p>\n<pre><code>def fonction():\n f = 11\n def interne():\n print(f)\n interne()\n fonction()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Locale</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Globale</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Enclosing</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Built-in</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\ndef fonction():\n    x = 10\n    def interne():\n        x = 20\n    interne()\n    print(x)\n\nfonction()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>10</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>20</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>None</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment la portée de 'x' est-elle gérée ici ?</p>\n<pre><code>x = 100\ndef fonction():\n    x = 200\n    def interne():\n        nonlocal x\n        x = 300\n    interne()\n    return x\n\nprint(fonction())</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>100</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>200</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>300</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Une erreur sera générée</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code ?</p>\n<pre><code>\ng = 2\ndef fonction():\n    global g\n    g = 7\n\nfonction()\nprint(g)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>7</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>None</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la portée de la variable 'h' dans ce code ?</p>\n<pre><code>\nh = 14\ndef fonction():\n    print(h)\n\n\nfonction()\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Globale</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Locale</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Enclosing</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Built-in</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\nx = 5\ndef fonction():\n    x = 10\n    def interne():\n        global x\n        x = 20\n    interne()\n    print(x)\n\nfonction()\nprint(x)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>10\n5</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>20\n5\n</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>10\n20</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la portée de la variable 'j' dans ce code ?</p>\n<pre><code>\ndef fonction():\n    j = 13\n    print(j)\n\nfonction()\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Locale</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Globale</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Enclosing</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Built-in</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quen renvoie ce code ?</p>\n<pre><code>\ndef fonction():\n    j = 13\n    print(j)\n\nfonction()\nprint(j)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Erreur : NameError</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>13</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>'j'</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que va-t-il se passer avec la portée des variables ici ?</p>\n<pre><code>x = 10\ndef fonction():\n    global x\n    x = 20\n    print(x)\n\nfonction()\nprint(x)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>10, 10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>20, 20</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>20, 10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur sera générée</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code ?</p>\n<pre><code>\no = 2\ndef fonction():\n    o = 8\n    def interne():\n        print(o)\n    interne()\n\nfonction()\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>8</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>None</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\nx = 5\ndef modifier_x():\n    x = 10\n\nmodifier_x()\nprint(x)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>10</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>5</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>None</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la portée de la variable 'y' dans ce code ?</p>\n<pre><code>\ny = 20\ndef fonction():\n    print(y)\n\nfonction()\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Globale</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Locale</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Enclosing</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Built-in</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment la portée est-elle résolue dans ce code ?</p>\n<pre><code>x = 1\ndef fonction():\n    x = 2\n    def interne():\n        x = 3\n        print(x)\n    interne()\n    print(x)\n\nfonction()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>1, 1</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>3, 2</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>2, 3</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>3, 3</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment la variable 's' est-elle résolue ?</p>\n<pre><code>s = \"globale\"\ndef fonction():\n    s = \"locale\"\n    def interne():\n        print(s)\n    interne()\n\nfonction()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>\"locale\" sera affiché</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>\"globale\" sera affiché</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur sera générée</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>None sera affiché</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la valeur de 'x' ?</p>\n<pre><code>x = 10\ndef fonction():\n    x = 20\n    def interne():\n        nonlocal x\n        x *= 2\n    interne()\n    return x\n\nprint(fonction())</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>20</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>40</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Une erreur sera générée</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code ?</p>\n<pre><code>x = 1\ndef fonction():\n    x = 2\n    def interne():\n        global x\n        x = 3\n    interne()\n    print(x)\n\nfonction()\nprint(x)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>2, 1</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>2, 3</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>3, 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>3, 3</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code ?</p>\n<pre><code>\nu = 4\ndef fonction():\n    u = 9\n    def interne():\n        print(u)\n    interne()\n\nfonction()\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>9</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>4</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>None</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la valeur affichée ?</p>\n<pre><code>x = 10\ndef fonction():\n    x = 20\n    def interne():\n        print(x)\n    x = 30\n    interne()\n\nfonction()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>30</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>20</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur sera générée</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la portée finale de 'x' ?</p>\n<pre><code>x = 100\ndef fonction():\n    x = 200\n    def interne():\n        global x\n        x = 300\n    interne()\n    print(x)\n\nfonction()\nprint(x)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>200, 100</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>100, 200</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>200, 300</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>300, 300</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\ndef fonction():\n    x = 10\n    return x\n\nprint(x)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>10</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>None</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>0</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment la portée de 'z' est-elle résolue dans ce code ?</p>\n<pre><code>x = 10\ndef fonction():\n    y = 20\n    def interne():\n        z = 30\n        print(x, y, z)\n    interne()\n\nfonction()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>x est globale, y est non-locale ou enclosing, z est locale</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>x est globale, y est locale, z est non-locale ou enclosing</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Toutes les variables sont globales</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Toutes les variables sont locales</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\nx = 5\n\ndef fonction():\n    x = 10\n    def interne():\n        print(x)\n    interne()\n\nfonction()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>10</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>5</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>None</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel sera le résultat de ce code ?</p>\n<pre><code>x = 100\ndef modifier_x():\n    x = 200\n    print(x)\n\nmodifier_x()\nprint(x)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>200, 100</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>200, 200</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>100, 100</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur sera générée</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\nx = 5\n\ndef fonction():\n    print(x)\n    x = 10\n\nfonction()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>5</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>10</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>UnboundLocalError</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>None</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment gérer correctement la modification d'une variable globale ?</p>\n<pre><code>total = 0\ndef ajouter(valeur):\n    # Complétez ici\n    total += valeur\n    return total</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Il n'y a rien à modifier</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Utiliser le mot-clé 'global total'</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Utiliser 'nonlocal total'</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Il faut passer par une variable intermédiaire : tempo = total</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\ndef fonction():\n    x = 10\n    def interne():\n        nonlocal x\n        x = 20\n    interne()\n    print(x)\n\nfonction()</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>10</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>20</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>None</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que va afficher ce code concernant la résolution de portée ?</p>\n<pre><code>\nx = 5\ndef fonction():\n    print(x)\n    def interne():\n        print(x)\n    x = 10\n    interne()\n\nfonction()\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>5</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une UnboundLocalError sera générée</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>\"x\" n'est pas affecté correctement</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la valeur de x après l'exécution de ce code ?</p>\n<pre class=\"language-python\"><code>\ndef incrementer(nombre): \n    nombre = nombre + 1 \n   \n x = 5\n incrementer(x)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>6</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>5</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Une erreur se produit</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Dans le code suivant, quelle est la portée de la règle LEGB qui est utilisée :</p>\n<pre><code>\nimport math\ndef fonction():\n    return math.sqrt(16)\n</code> </pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>built-in</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>local</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>enclosing</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>global</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de ce code ? </p>\n<pre><code>\ndef externe():\n    x = 5\n    def interne():\n        x = x + 1\n    interne()\n    return x\n\nprint(externe())\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>UnboundLocalError</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>5</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>6</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>'externe()'</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Qu'affiche le code suivant :</p>\n<pre><code>\ndef fonction():\n    x = 10\n    del x\n    print(x)\n\nprint(fonction())\n</code> </pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>UnboundLocalError</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>10</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>NameError</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Qu'affiche le code suivant ?</p>\n<pre><code>\ndef externe():\n    x = 10\n    def interne():\n        x = 20\n    interne()\n    return x\n\nprint(externe())\n</code> </pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>10</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>20</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>UnboundLocalError</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que se passe-t-il si une variable locale a le même nom qu'une variable globale ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "La variable locale est ignorée",
                        "fraction": 0
                    },
                    {
                        "text": "La variable locale masque la variable globale",
                        "fraction": 100
                    },
                    {
                        "text": "Une erreur est levée",
                        "fraction": 0
                    },
                    {
                        "text": "Les deux variables fusionnent",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Où Python recherche-t-il une variable si elle n'est ni locale, ni enclosing, ni globale ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Dans les modules importés",
                        "fraction": 0
                    },
                    {
                        "text": "Dans l'espace de noms built-in",
                        "fraction": 100
                    },
                    {
                        "text": "Elle est considérée comme non définie",
                        "fraction": 0
                    },
                    {
                        "text": "Dans l'espace global d'un autre module",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la portée d'une variable définie dans un bloc `if` en Python ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Elle est limitée au bloc `if`",
                        "fraction": 0
                    },
                    {
                        "text": "Elle est accessible après le bloc `if`",
                        "fraction": 100
                    },
                    {
                        "text": "Elle est supprimée après l'exécution du `if`",
                        "fraction": 0
                    },
                    {
                        "text": "Elle devient globale",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que se passe-t-il si on utilise `del` sur une variable locale ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Elle est supprimée de l'espace de noms local",
                        "fraction": 100
                    },
                    {
                        "text": "Elle devient une variable globale",
                        "fraction": 0
                    },
                    {
                        "text": "Une erreur est levée",
                        "fraction": 0
                    },
                    {
                        "text": "Elle est conservée en mémoire",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Comment accéder à une variable globale depuis une fonction sans utiliser `global` ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "En la redéfinissant dans la fonction",
                        "fraction": 0
                    },
                    {
                        "text": "En la passant en argument",
                        "fraction": 100
                    },
                    {
                        "text": "Avec `nonlocal`",
                        "fraction": 0
                    },
                    {
                        "text": "Ce n'est pas possible",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le comportement de `vars()` lorsqu'il est utilisé sans argument dans une fonction ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il renvoie un dictionnaire des variables locales",
                        "fraction": 100
                    },
                    {
                        "text": "Il renvoie un dictionnaire des variables globales",
                        "fraction": 0
                    },
                    {
                        "text": "Il lève une erreur",
                        "fraction": 0
                    },
                    {
                        "text": "Il retourne `None`",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que se passe-t-il si on tente d'accéder à une variable locale avant de l'assigner ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Elle prend une valeur par défaut",
                        "fraction": 0
                    },
                    {
                        "text": "Une erreur est levée",
                        "fraction": 100
                    },
                    {
                        "text": "Elle est recherchée dans l'espace global",
                        "fraction": 0
                    },
                    {
                        "text": "Elle est ignorée",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Dans le contexte de LEGB, qu'est-ce qu'un scope enclosing ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "L'espace de noms global",
                        "fraction": 0
                    },
                    {
                        "text": "L'espace de noms de la fonction built-in",
                        "fraction": 0
                    },
                    {
                        "text": "L'espace de noms de la fonction englobante",
                        "fraction": 100
                    },
                    {
                        "text": "Un synonyme de l'espace local",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef print_global_x():\n    print(x)\n    global x\n</code></pre>\n<p>Que se passe-t-il si vous exécutez ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Il lève une erreur de syntaxe (SyntaxError)</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Il lève une erreur de nom (NameError)</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Il fonctionne parfaitement</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quand devez-vous envisager d'utiliser les mots-clés \"global\" et \"nonlocal\" en Python ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Lorsque vous voulez empêcher Python de modifier une variable.</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Lorsque vous souhaitez créer une nouvelle variable locale.</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Lorsque vous devez modifier une variable en dehors de la portée locale et que vous souhaitez le faire de manière explicite.</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Lorsque vous voulez vous assurer qu'une variable n'est accessible qu'à l'intérieur d'une fonction.</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quels sont les quatre types d'espaces de noms en Python ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Built-in (intégré)</p>",
                        "fraction": 25
                    },
                    {
                        "text": "<p>Local</p>",
                        "fraction": 25
                    },
                    {
                        "text": "<p>Enclosing</p>",
                        "fraction": 25
                    },
                    {
                        "text": "<p>Global</p>",
                        "fraction": 25
                    },
                    {
                        "text": "<p>Effective</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>General</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Qu'arrive-t-il à l'espace de noms d'une fonction lorsqu'elle se termine ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Toutes les références d'objets fusionnent dans l'espace de noms global</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Python supprime immédiatement l'espace de noms</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Toutes les références aux objets qu'il contient cessent d'être valides</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Python enregistre l'espace de noms pour les futurs appels de fonctions dans une variable spéciale appelée __futures__</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelles fonctions intégrées pouvez-vous utiliser pour accéder aux espaces de noms locaux et globaux ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>globals()</p>",
                        "fraction": 50
                    },
                    {
                        "text": "<p>locals()</p>",
                        "fraction": 50
                    },
                    {
                        "text": "<p>dict()</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>namespace()</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>L'espace de noms ___________ de Python est créé au début du programme principal.</p>",
                "type": "shortanswer",
                "answers": [
                    {
                        "text": "global",
                        "fraction": 100
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que faut-il ajouter à la place des astérisques pour que la fonction <strong>inner()</strong> change la valeur de x dans la portée englobante en 100.</p>\n<p> </p>\n<pre><code>\ndef outer():\n    x = 50\n    def inner():\n        *****************\n        x = 100\n    inner()\n    return x\n</code></pre>",
                "type": "shortanswer",
                "answers": [
                    {
                        "text": "nonlocal x",
                        "fraction": 100
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Une fonction Python ne peut pas modifier un objet mutable en dehors de sa portée locale.</p>",
                "type": "truefalse",
                "answers": [
                    {
                        "text": true,
                        "fraction": 100
                    },
                    {
                        "text": false,
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Continue Break",
        "questions": [
            {
                "text": "Comment peut-on sortir d'une boucle while en Python ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "En utilisant l'instruction exit.",
                        "fraction": 0
                    },
                    {
                        "text": "En utilisant l'instruction continue.",
                        "fraction": 0
                    },
                    {
                        "text": "En utilisant l'instruction break.",
                        "fraction": 100
                    },
                    {
                        "text": "En utilisant l'instruction return.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que va afficher le code suivant ?</p>\n<pre><code>\nfor i in range(5):\n    if i == 3:\n        break\n    print(i)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "0, 1, 2",
                        "fraction": 100
                    },
                    {
                        "text": "0, 1, 2, 3",
                        "fraction": 0
                    },
                    {
                        "text": "1, 2, 3",
                        "fraction": 0
                    },
                    {
                        "text": "0, 1, 2, 3, 4",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Dans le code ci-dessous, quelle sera la valeur de x après l'exécution ?</p>\n<pre><code>\nx = 0\nwhile x &lt; 10:\n    x += 2\n    if x == 6:\n        break\nprint(x)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "4",
                        "fraction": 0
                    },
                    {
                        "text": "6",
                        "fraction": 100
                    },
                    {
                        "text": "8",
                        "fraction": 0
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nfor lettre in 'python':\n    if lettre == 'h':\n        break\n    print(lettre)\n</code></pre>\n<p>Qu'imprime ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "p, y, t",
                        "fraction": 100
                    },
                    {
                        "text": "o, n",
                        "fraction": 0
                    },
                    {
                        "text": "p, y, t, h",
                        "fraction": 0
                    },
                    {
                        "text": "Aucune de ces réponses",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ntotal = 0\nfor num in range(1, 6):\n    total += num\n    if total &gt; 10:\n        break\nprint(total)\n</code></pre>\n<p>Que va produire ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "15",
                        "fraction": 100
                    },
                    {
                        "text": "6",
                        "fraction": 0
                    },
                    {
                        "text": "21",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nnombres = [10, 20, 30, 40, 50]\nfor n in nombres:\n    if n &gt; 25:\n        break\nprint(n)\n</code></pre>\n<p>Quel sera le résultat de ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "20",
                        "fraction": 0
                    },
                    {
                        "text": "30",
                        "fraction": 100
                    },
                    {
                        "text": "40",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait l'instruction break dans une boucle ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Elle arrête complètement l'exécution du programme",
                        "fraction": 0
                    },
                    {
                        "text": "Elle saute à l'itération suivante",
                        "fraction": 0
                    },
                    {
                        "text": "Elle termine immédiatement la boucle en cours",
                        "fraction": 100
                    },
                    {
                        "text": "Elle recommence la boucle depuis le début",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nx = 0\nwhile True:\n    x += 1\n    if x == 5:\n        break\nprint(x)\n</code></pre>\n<p>Dans ce code, qu'affiche le print ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "4",
                        "fraction": 0
                    },
                    {
                        "text": "5",
                        "fraction": 100
                    },
                    {
                        "text": "Une erreur",
                        "fraction": 0
                    },
                    {
                        "text": "0",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nfor i in range(3):\n    for j in range(3):\n        if j == 2:\n            break\n        print(i, j)\n</code></pre>\n<p>Que va afficher ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "0 0, 0 1, 1 0, 1 1, 2 0, 2 1",
                        "fraction": 100
                    },
                    {
                        "text": "0 0, 0 1, 1 0, 1 1, 2 0, 2 1, 2 2",
                        "fraction": 0
                    },
                    {
                        "text": "0 0, 0 1, 1 0, 1 1",
                        "fraction": 0
                    },
                    {
                        "text": "0 0, 0 1",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nchaine = \"bonjour\"\nfor lettre in chaine:\n    if lettre in 'aeiou':\n        break\n    print(lettre)\n</code></pre>\n<p>Que va produire ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "b",
                        "fraction": 100
                    },
                    {
                        "text": "bo",
                        "fraction": 0
                    },
                    {
                        "text": "b, o",
                        "fraction": 0
                    },
                    {
                        "text": "Aucune de ces réponses",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>count = 0\nwhile count &lt; 10:\n    count += 1\n    if count == 7:\n        break\nprint(count)\n</code></pre>\n<p>Dans ce code, quelle sera la valeur finale de count ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "6",
                        "fraction": 0
                    },
                    {
                        "text": "7",
                        "fraction": 100
                    },
                    {
                        "text": "8",
                        "fraction": 0
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nnumeros = [1, 2, 3, 4, 5]\nfor num in numeros:\n    if num % 2 == 0:\n        break\n    print(num)\n</code></pre>\n<p>Que va afficher ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "1",
                        "fraction": 100
                    },
                    {
                        "text": "1, 2",
                        "fraction": 0
                    },
                    {
                        "text": "2",
                        "fraction": 0
                    },
                    {
                        "text": "Aucune de ces réponses",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que se passe-t-il si break est utilisé en dehors de toute boucle ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Rien de particulier",
                        "fraction": 0
                    },
                    {
                        "text": "Une erreur de syntaxe",
                        "fraction": 0
                    },
                    {
                        "text": "Une exception TypeError",
                        "fraction": 0
                    },
                    {
                        "text": "Une exception SyntaxError",
                        "fraction": 100
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nfor i in range(5):\n    if i == 10:\n        break\n    print(i)\n</code></pre>\n<p>Dans ce code, que va-t-il se passer ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Rien ne sera imprimé",
                        "fraction": 0
                    },
                    {
                        "text": "Une erreur se produira",
                        "fraction": 0
                    },
                    {
                        "text": "Tous les nombres de 0 à 4 seront imprimés",
                        "fraction": 100
                    },
                    {
                        "text": "Seul 0 sera imprimé",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nx = 0\nwhile x &lt; 5:\n    if x == 3:\n        x += 1\n        continue\n    print(x)\n    x += 1\n</code></pre>\n<p>Que va afficher ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "0, 1, 2, 4",
                        "fraction": 100
                    },
                    {
                        "text": "0, 1, 2, 3, 4",
                        "fraction": 0
                    },
                    {
                        "text": "0, 1, 2, 4, 5",
                        "fraction": 0
                    },
                    {
                        "text": "0, 1, 2",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ntotal = 0\nfor num in range(1, 10):\n    total += num\n    if total &gt;= 15:\n        break\nprint(total)\n</code></pre>\n<p>Que va produire ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "15",
                        "fraction": 100
                    },
                    {
                        "text": "21",
                        "fraction": 0
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "16",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nfor i in range(3):\n    for j in range(3):\n        if i == j:\n            break\n        print(i, j)\n</code></pre>\n<p>Dans ce code imbriqué, que va-t-il se passer ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Rien ne sera imprimé",
                        "fraction": 0
                    },
                    {
                        "text": "1 0\n2 0\n2 1",
                        "fraction": 100
                    },
                    {
                        "text": "1 0\n2 0",
                        "fraction": 0
                    },
                    {
                        "text": "1 0",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nmot = \"programmation\"\nfor lettre in mot:\n    if lettre == 'm':\n        break\n    print(lettre)\n</code></pre>\n<p>Que va afficher ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "p, r, o, g, r, a",
                        "fraction": 100
                    },
                    {
                        "text": "p, r, o, g, r, a, a, t, i, o, n",
                        "fraction": 0
                    },
                    {
                        "text": "m, m",
                        "fraction": 0
                    },
                    {
                        "text": "Aucune de ces réponses",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nliste = [1, 2, 3, 4, 5]\nfor element in liste:\n    if element &gt; 3:\n        break\nprint(element)\n</code></pre>\n<p>Que va produire ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "1",
                        "fraction": 0
                    },
                    {
                        "text": "2",
                        "fraction": 0
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "4",
                        "fraction": 100
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>x = 0\nwhile x &lt; 10:\n    if x == 5:\n        break\n    x += 2\nprint(x)\n</code></pre>\n<p>Dans ce code, que va-t-il se passer ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "5",
                        "fraction": 0
                    },
                    {
                        "text": "10",
                        "fraction": 100
                    },
                    {
                        "text": "6",
                        "fraction": 0
                    },
                    {
                        "text": "8",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\nfor i in range(5):\n    if i == 2:\n        break\n    print(i * 2)\n</code></pre>\n<p>Que va afficher ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "0, 2, 4",
                        "fraction": 0
                    },
                    {
                        "text": "0, 2",
                        "fraction": 100
                    },
                    {
                        "text": "2, 4",
                        "fraction": 0
                    },
                    {
                        "text": "2",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est l'effet de cette boucle ?</p>\n<pre class=\"language-python\"><code>\ni = 0 \nwhile i &lt; 3: \n    i += 1 \nelse: \n    print(\"Terminé\")\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Affiche \"Terminé\" après avoir exécuté la boucle</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Affiche \"Terminé\" avant d'exécuter la boucle</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Provoque une erreur</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>N'affiche jamais \"Terminé\"</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant :</p>\n<pre class=\"language-python\"><code>\nx = 97\nmy_string = \"Start\"\nwhile x &gt; 100:\n    my_string = my_string + chr(x)\n    x = x + 1\nelse:\n    my_string = \"42\"\n\nprint(\"The answer is \" + my_string)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Il affiche : \"The answer is 42\"</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Il affiche : \"The answer is Startabcd\"</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Il affiche 9 fois le texte \"Start\" sur des lignes séparées</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Il provoque une boucle infinie</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Reflexion",
        "questions": [
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\nmatrix = [[1, 2, 3], [4, 5, 6]]\ntransposed = list(zip(*matrix))\nprint(transposed)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[(1, 4), (2, 5), (3, 6)]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[[1, 4], [2, 5], [3, 6]]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[[1, 2, 3], [4, 5, 6]]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur ValueError</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\nlists = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nresult = [sum(x) for x in zip(*lists)]\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[12, 15, 18]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[6, 15, 24]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1, 2, 3, 4, 5, 6, 7, 8, 9]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur TypeError</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\ndef fonction_travail(*args):\n    return list(zip(*args))\n\nprint(fonction_travail([1,2,3], [4,5,6]))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[(1,4), (2,5), (3,6)]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[[1,2,3], [4,5,6]]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1,4,2,5,3,6]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur de syntaxe</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat du code suivant ?\n<pre><code>\ndef fonction_travail(s='bonjour', voyelles='aeiou'):\n    return sum(1 for char in s if char in voyelles)\n\nresultat = fonction_travail(s='hello')</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "2",
                        "fraction": 100
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "1",
                        "fraction": 0
                    },
                    {
                        "text": "4",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie de ce code ?\n<pre><code>def split_kwargs(**kwargs):\n    nums = {k: v for k, v in kwargs.items() if isinstance(v, (int, float))}\n    strs = {k: v for k, v in kwargs.items() if isinstance(v, str)}\n    return nums, strs\n\nprint(split_kwargs(a=1, b=\"hello\", c=2.0, d=\"world\"))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "({'a': 1, 'c': 2.0}, {'b': 'hello', 'd': 'world'})",
                        "fraction": 100
                    },
                    {
                        "text": "[{'a': 1, 'c': 2.0}, {'b': 'hello', 'd': 'world'}]",
                        "fraction": 0
                    },
                    {
                        "text": "{'numbers': {'a': 1, 'c': 2.0}, 'strings': {'b': 'hello', 'd': 'world'}}",
                        "fraction": 0
                    },
                    {
                        "text": "TypeError: cannot split dictionary",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la valeur de output ?\n<pre><code>def filter_none(**kwargs):\n    return {k: v for k, v in kwargs.items() if v is not None}\n\noutput = filter_none(a=1, b=None, c=\"hello\", d=None)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "{'a': 1, 'c': 'hello'}",
                        "fraction": 100
                    },
                    {
                        "text": "{'b': None, 'd': None}",
                        "fraction": 0
                    },
                    {
                        "text": "{'a': 1, 'b': None, 'c': 'hello', 'd': None}",
                        "fraction": 0
                    },
                    {
                        "text": "ValueError: None values not allowed",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie de ce code ?\n<pre><code>def group_by_type(**kwargs):\n    groups = {}\n    for k, v in kwargs.items():\n        t = type(v).__name__\n        if t not in groups:\n            groups[t] = {}\n        groups[t][k] = v\n    return groups\n\nprint(group_by_type(a=1, b=\"hello\", c=2.0, d=\"world\"))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "{'int': {'a': 1}, 'str': {'b': 'hello', 'd': 'world'}, 'float': {'c': 2.0}}",
                        "fraction": 100
                    },
                    {
                        "text": "{'a': 'int', 'b': 'str', 'c': 'float', 'd': 'str'}",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 'hello', 2.0, 'world']",
                        "fraction": 0
                    },
                    {
                        "text": "TypeError: cannot group by type",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la valeur de result ?\n<pre><code>def apply_defaults(**kwargs):\n    defaults = {\"mode\": \"test\", \"retry\": 3}\n    for k, v in defaults.items():\n        if isinstance(v, (int, float, str)):\n            kwargs.setdefault(k, v)\n    return kwargs\n\nresult = apply_defaults(mode=\"prod\", timeout=30)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "{'mode': 'prod', 'timeout': 30, 'retry': 3}",
                        "fraction": 100
                    },
                    {
                        "text": "{'mode': 'test', 'timeout': 30, 'retry': 3}",
                        "fraction": 0
                    },
                    {
                        "text": "{'mode': 'prod', 'timeout': 30}",
                        "fraction": 0
                    },
                    {
                        "text": "ValueError: cannot modify kwargs",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait ce code ?\n<pre><code>def filter_kwargs(**kwargs):\n    return {k: v for k, v in kwargs.items() if isinstance(v, int)}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Retourne un nouveau dictionnaire ne contenant que les valeurs de type entier",
                        "fraction": 100
                    },
                    {
                        "text": "Retourne un nouveau dictionnaire contenant toutes les valeurs",
                        "fraction": 0
                    },
                    {
                        "text": "Vérifie si toutes les valeurs sont des entiers",
                        "fraction": 0
                    },
                    {
                        "text": "Convertit toutes les valeurs en entiers",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie de ce code ?\n<pre><code>def combine(**kwargs):\n    return \"-\".join(str(v) for v in kwargs.values())\n\nprint(combine(a=1, b=\"hello\", c=3))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "\"1-hello-3\"",
                        "fraction": 100
                    },
                    {
                        "text": "\"a-b-c\"",
                        "fraction": 0
                    },
                    {
                        "text": "\"1,hello,3\"",
                        "fraction": 0
                    },
                    {
                        "text": "TypeError: join() takes only strings",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre class=\"language-python\"><code>def analyze_words(words):\n    categories = {\n        'short': [],\n        'medium': [],\n        'long': []\n    }\n    \n    for word in words:\n        length = len(word)\n        if length &lt;= 3:\n            categories['short'].append(word.upper())\n        elif length &lt;= 6:\n            categories['medium'].append(word.capitalize())\n        else:\n            categories['long'].append(word.lower())\n            \n    return {k: sorted(v) for k, v in categories.items()}\n\ntest = [\"hi\", \"hello\", \"bonjour\", \"yes\", \"python\", \"ok\"]\nprint(analyze_words(test))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>{'short': ['HI', 'OK', 'YES'], 'medium': ['Hello', 'Python'], 'long': ['bonjour']}</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>{'short': ['HI', 'OK'], 'medium': ['Hello', 'Python', 'Yes'], 'long': ['bonjour']}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{'short': ['hi', 'ok'], 'medium': ['hello', 'python', 'yes'], 'long': ['BONJOUR']}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{'short': ['HI', 'OK'], 'medium': ['Yes', 'Hello', 'Python'], 'long': ['bonjour']}</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Comprehensions",
        "questions": []
    },
    {
        "category": "top/002_LURET Python_niveau2/Comprehensions/list",
        "questions": [
            {
                "text": "Quel sera le résultat de cette compréhension de liste ?\n<pre><code>nombres = [1, 2, 3, 4, 5]\nresultat = [x * 2 for x in nombres if x &gt; 2]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[2, 4, 6, 8, 10]",
                        "fraction": -25
                    },
                    {
                        "text": "[6, 8, 10]",
                        "fraction": 100
                    },
                    {
                        "text": "[4, 6, 8, 10]",
                        "fraction": -25
                    },
                    {
                        "text": "[3, 4, 5]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que produit cette compréhension imbriquée ?\n<pre><code>matrice = [[1, 2], [3, 4]]\nresultat = [elem for ligne in matrice for elem in ligne]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[[1, 2], [3, 4]]",
                        "fraction": -25
                    },
                    {
                        "text": "[1, 2, 3, 4]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 3, 2, 4]",
                        "fraction": -25
                    },
                    {
                        "text": "[[1], [2], [3], [4]]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension conditionnelle ?\n<pre><code>nombres = [-2, -1, 0, 1, 2]\nresultat = [x if x &gt; 0 else 0 for x in nombres]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[-2, -1, 0, 1, 2]",
                        "fraction": -25
                    },
                    {
                        "text": "[0, 0, 0, 1, 2]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2]",
                        "fraction": -25
                    },
                    {
                        "text": "Une erreur est générée",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que produit cette compréhension avec zip ?\n<pre><code>x = [1, 2, 3]\ny = ['a', 'b', 'c']\nresultat = [(a, b) for a, b in zip(x, y)]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 2, 3, 'a', 'b', 'c']",
                        "fraction": -25
                    },
                    {
                        "text": "[(1, 'a'), (2, 'b'), (3, 'c')]",
                        "fraction": 100
                    },
                    {
                        "text": "[[1, 'a'], [2, 'b'], [3, 'c']]",
                        "fraction": -25
                    },
                    {
                        "text": "Une erreur est générée",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de cette compréhension avec chaînes ?</p>\n<pre><code>mots = [\"python\", \"java\", \"ruby\"]\nresultat = [mot.upper() for mot in mots if len(mot) &gt; 4]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[\"PYTHON\", \"JAVA\", \"RUBY\"]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[\"PYTHON\"]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[\"python\", \"ruby\"]</p>",
                        "fraction": -25
                    },
                    {
                        "text": "<p>[\"JAVA\"]</p>",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Comment fonctionne cette compréhension avec range ?\n<pre><code>resultat = [x**2 for x in range(5) if x % 2 == 0]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[0, 1, 4, 9, 16]",
                        "fraction": -25
                    },
                    {
                        "text": "[0, 4, 16]",
                        "fraction": 100
                    },
                    {
                        "text": "[0, 2, 4]",
                        "fraction": -25
                    },
                    {
                        "text": "[0, 1, 2, 3, 4]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que donne cette compréhension avec deux conditions ?</p>\n<pre><code>nombres = [-1, 0, 1, 2, 3, 4]\nresultat = [x for x in nombres if x &gt; 0 if x % 2 == 0]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[2, 2]</p>",
                        "fraction": -25
                    },
                    {
                        "text": "<p>[2, 4]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[0, 2, 4]</p>",
                        "fraction": -25
                    },
                    {
                        "text": "<p>[1, 2, 3, 4]</p>",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension avec dictionnaire ?\n<pre><code>d = {'a': 1, 'b': 2, 'c': 3}\nresultat = [k + str(v) for k, v in d.items()]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "['a', 'b', 'c']",
                        "fraction": -25
                    },
                    {
                        "text": "['a1', 'b2', 'c3']",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": -25
                    },
                    {
                        "text": "[('a', 1), ('b', 2), ('c', 3)]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que produit cette compréhension avec enumerate ?\n<pre><code>mots = ['chat', 'chien']\nresultat = [(i, mot.upper()) for i, mot in enumerate(mots)]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "['CHAT', 'CHIEN']",
                        "fraction": -25
                    },
                    {
                        "text": "[(0, 'CHAT'), (1, 'CHIEN')]",
                        "fraction": 100
                    },
                    {
                        "text": "[0, 1]",
                        "fraction": -25
                    },
                    {
                        "text": "['chat', 'chien']",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension imbriquée ?\n<pre><code>matrice = [[1, 2], [3, 4]]\nresultat = [[x + 1 for x in ligne] for ligne in matrice]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[2, 3, 4, 5]",
                        "fraction": -25
                    },
                    {
                        "text": "[[2, 3], [4, 5]]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3, 4]",
                        "fraction": -25
                    },
                    {
                        "text": "[[1, 2], [3, 4]]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que donne cette compréhension ?</p>\n<pre><code>nombres = [1, 2, 2, 3, 3, 4]\nresultat = [x for x in set(nombres) if x % 2 == 0]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[2, 2, 4]</p>",
                        "fraction": -25
                    },
                    {
                        "text": "<p>[2, 4]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[2]</p>",
                        "fraction": -25
                    },
                    {
                        "text": "<p>[1, 2, 3, 4]</p>",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension avec all ?\n<pre><code>mots = ['python', 'java', 'ruby']\nresultat = [mot for mot in mots if all(c.lower() in 'aeiou' for c in mot)]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "['python', 'java', 'ruby']",
                        "fraction": -25
                    },
                    {
                        "text": "[]",
                        "fraction": 100
                    },
                    {
                        "text": "['java']",
                        "fraction": -25
                    },
                    {
                        "text": "Une erreur est générée",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que produit cette compréhension avec str.join ?\n<pre><code>nombres = [1, 2, 3]\nresultat = ['-'.join(str(x) for x in range(n)) for n in nombres]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "['1', '2', '3']",
                        "fraction": -25
                    },
                    {
                        "text": "['0', '0-1', '0-1-2']",
                        "fraction": 100
                    },
                    {
                        "text": "[[], [0], [0, 1]]",
                        "fraction": -25
                    },
                    {
                        "text": "['1-2-3']",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension avec any ?\n<pre><code>mots = ['hello', 'world', 'python']\nresultat = [mot for mot in mots if any(c.isupper() for c in mot)]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "['hello', 'world', 'python']",
                        "fraction": -25
                    },
                    {
                        "text": "[]",
                        "fraction": 100
                    },
                    {
                        "text": "['HELLO', 'WORLD', 'PYTHON']",
                        "fraction": -25
                    },
                    {
                        "text": "Une erreur est générée",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que donne cette compréhension ?</p>\n<pre><code>\nresultat = [x * 2 for x in range(4)]\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[0, 1, 2, 3]</p>",
                        "fraction": -25
                    },
                    {
                        "text": "<p>[0, 2, 4, 6]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[2, 4, 6, 8]</p>",
                        "fraction": -25
                    },
                    {
                        "text": "<p>Une erreur est générée</p>",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de cette compréhension avec filter ?</p>\n<pre><code>\nnombres = [1, 2, 3, 4, 5]\nresultat = [x for x in nombres if x % 2 == 0]\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[1, 2, 3, 4, 5]</p>",
                        "fraction": -25
                    },
                    {
                        "text": "<p>[2, 4]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 3, 5]</p>",
                        "fraction": -25
                    },
                    {
                        "text": "<p>Une erreur est générée</p>",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que produit cette compréhension avec map ?\n<pre><code>nombres = [1, 2, 3]\nresultat = [x for x in map(str, nombres)]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 2, 3]",
                        "fraction": -25
                    },
                    {
                        "text": "['1', '2', '3']",
                        "fraction": 100
                    },
                    {
                        "text": "['1, 2, 3']",
                        "fraction": -25
                    },
                    {
                        "text": "Une erreur est générée",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension avec isinstance ?\n<pre><code>donnees = [1, '2', 3, '4']\nresultat = [int(x) for x in donnees if isinstance(x, str)]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 2, 3, 4]",
                        "fraction": -25
                    },
                    {
                        "text": "[2, 4]",
                        "fraction": 100
                    },
                    {
                        "text": "['2', '4']",
                        "fraction": -25
                    },
                    {
                        "text": "[1, 3]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que donne cette compréhension avec sum ?\n<pre><code>matrice = [[1, 2], [3, 4]]\nresultat = [sum(ligne) for ligne in matrice]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 2, 3, 4]",
                        "fraction": -25
                    },
                    {
                        "text": "[3, 7]",
                        "fraction": 100
                    },
                    {
                        "text": "10",
                        "fraction": -25
                    },
                    {
                        "text": "[[1, 2], [3, 4]]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension avec sorted ?\n<pre><code>mots = ['python', 'java', 'ruby']\nresultat = [mot for mot in sorted(mots, key=len)]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "['python', 'java', 'ruby']",
                        "fraction": -25
                    },
                    {
                        "text": "['java', 'ruby', 'python']",
                        "fraction": 100
                    },
                    {
                        "text": "['ruby', 'java', 'python']",
                        "fraction": -25
                    },
                    {
                        "text": "['python', 'ruby', 'java']",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que produit cette compréhension avec reversed ?\n<pre><code>nombres = [1, 2, 3]\nresultat = [x for x in reversed([x**2 for x in nombres])]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 2, 3]",
                        "fraction": -25
                    },
                    {
                        "text": "[9, 4, 1]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 4, 9]",
                        "fraction": -25
                    },
                    {
                        "text": "[3, 2, 1]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension avec round ?\n<pre><code>nombres = [1.234, 2.345, 3.456]\nresultat = [round(x, 1) for x in nombres]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1.234, 2.345, 3.456]",
                        "fraction": -25
                    },
                    {
                        "text": "[1.2, 2.3, 3.5]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": -25
                    },
                    {
                        "text": "[1.2345, 2.3456, 3.4567]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que donne cette compréhension avec abs ?\n<pre><code>nombres = [-2, -1, 0, 1, 2]\nresultat = [abs(x) for x in nombres if x &lt; 0]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[-2, -1, 0, 1, 2]",
                        "fraction": -25
                    },
                    {
                        "text": "[2, 1]",
                        "fraction": 100
                    },
                    {
                        "text": "[2, 1, 0]",
                        "fraction": -25
                    },
                    {
                        "text": "[-2, -1]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension avec min/max ?\n<pre><code>nombres = [[1, 2], [3, 4], [5, 6]]\nresultat = [(min(x), max(x)) for x in nombres]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 2, 3, 4, 5, 6]",
                        "fraction": -25
                    },
                    {
                        "text": "[(1, 2), (3, 4), (5, 6)]",
                        "fraction": 100
                    },
                    {
                        "text": "[2, 4, 6]",
                        "fraction": -25
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que produit cette compréhension avec chr ?\n<pre><code>nombres = range(65, 68)\nresultat = [chr(x) for x in nombres]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[65, 66, 67]",
                        "fraction": -25
                    },
                    {
                        "text": "['A', 'B', 'C']",
                        "fraction": 100
                    },
                    {
                        "text": "['a', 'b', 'c']",
                        "fraction": -25
                    },
                    {
                        "text": "Une erreur est générée",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension avec ord ?\n<pre><code>lettres = ['A', 'B', 'C']\nresultat = [ord(x) for x in lettres]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "['A', 'B', 'C']",
                        "fraction": -25
                    },
                    {
                        "text": "[65, 66, 67]",
                        "fraction": 100
                    },
                    {
                        "text": "[97, 98, 99]",
                        "fraction": -25
                    },
                    {
                        "text": "Une erreur est générée",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que donne cette compréhension avec bin ?\n<pre><code>nombres = [2, 3, 4]\nresultat = [bin(x)[2:] for x in nombres]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[2, 3, 4]",
                        "fraction": -25
                    },
                    {
                        "text": "['10', '11', '100']",
                        "fraction": 100
                    },
                    {
                        "text": "['0b10', '0b11', '0b100']",
                        "fraction": -25
                    },
                    {
                        "text": "[10, 11, 100]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de cette compréhension avec hex ?\n<pre><code>nombres = [10, 11, 12]\nresultat = [hex(x)[2:] for x in nombres]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[10, 11, 12]",
                        "fraction": -25
                    },
                    {
                        "text": "['a', 'b', 'c']",
                        "fraction": 100
                    },
                    {
                        "text": "['0xa', '0xb', '0xc']",
                        "fraction": -25
                    },
                    {
                        "text": "[10, 11, 12]",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que produit cette compréhension avec isinstance et type ?\n<pre><code>donnees = [1, 'deux', 3.0, [4]]\nresultat = [type(x).__name__ for x in donnees]</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 'deux', 3.0, [4]]",
                        "fraction": -25
                    },
                    {
                        "text": "['int', 'str', 'float', 'list']",
                        "fraction": 100
                    },
                    {
                        "text": "['number', 'string', 'decimal', 'array']",
                        "fraction": -25
                    },
                    {
                        "text": "Une erreur est générée",
                        "fraction": -25
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Comprehensions/set",
        "questions": [
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in range(10) if x % 2 == 0}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 2, 4, 6, 8}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{1, 3, 5, 7, 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{2, 4, 6, 8}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x ** 2 for x in range(5)}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 1, 4, 9, 16}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 4, 9, 16, 25}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 1, 4, 9}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in 'abracadabra' if x not in 'abc'}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'r', 'd'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'a', 'b', 'c', 'd', 'r'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a', 'b', 'c'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'r', 'a', 'd'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x + y for x in [1, 2, 3] for y in [4, 5, 6]}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{5, 6, 7, 8, 9}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4, 5, 6}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{5, 6, 7}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4, 5, 6, 7, 8, 9}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in range(10) if x % 3 == 0}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 3, 6, 9}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{3, 6, 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 3, 6}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in 'hello' if x in 'aeiou'}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'e', 'o'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'h', 'e', 'l', 'o'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'e'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'h', 'l', 'o'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x * 2 for x in range(5)}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 2, 4, 6, 8}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 2, 4, 6}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4, 5}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in range(10) if x &gt; 5}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{6, 7, 8, 9}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{5, 6, 7, 8, 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4, 5, 6, 7, 8, 9}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in 'python' if x not in 'aeiou'}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'p', 'y', 't', 'h', 'n'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'p', 'y', 't', 'h', 'o', 'n'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'y', 't', 'h', 'n'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'p', 't', 'h', 'n'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x + y for x in [1, 2] for y in [3, 4]}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{4, 5, 6}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{4, 5}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4, 5, 6}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in range(20) if x % 4 == 0}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 4, 8, 12, 16}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 4, 8, 12, 16, 20}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{4, 8, 12, 16}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 4, 8, 12}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in 'programming' if x in 'aeiou'}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'o', 'a', 'i'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'p', 'r', 'o', 'g', 'a', 'm', 'i', 'n'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'o', 'a'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'o', 'a', 'i', 'e'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x * 3 for x in range(4)}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 3, 6, 9}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 3, 6}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in range(15) if x &lt; 10}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4, 5, 6, 7, 8, 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5, 6, 7, 8}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in 'abcdef' if x not in 'abc'}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'d', 'e', 'f'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'a', 'b', 'c', 'd', 'e', 'f'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'d', 'e'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a', 'b', 'c'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x + y for x in [10, 20] for y in [30, 40]}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{40, 50, 60}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{10, 20, 30, 40}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{40, 50}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{10, 20, 30, 40, 50, 60}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in range(25) if x % 5 == 0}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 5, 10, 15, 20}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 5, 10, 15, 20, 25}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{5, 10, 15, 20}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 5, 10, 15}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in 'algorithm' if x in 'aeiou'}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'a', 'o', 'i'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'a', 'l', 'g', 'o', 'r', 'i', 't', 'h', 'm'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a', 'o'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a', 'o', 'i', 'e'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x * 4 for x in range(3)}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 4, 8}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 1, 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in range(30) if x &gt; 25}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{26, 27, 28, 29}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{25, 26, 27, 28, 29}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in 'abcdefgh' if x not in 'abc'}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'d', 'e', 'f', 'g', 'h'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'d', 'e', 'f', 'g'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a', 'b', 'c'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x + y for x in [5, 10] for y in [15, 20]}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{20, 25, 30}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{5, 10, 15, 20}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{20, 25}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{5, 10, 15, 20, 25, 30}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in range(50) if x % 10 == 0}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 10, 20, 30, 40}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 10, 20, 30, 40, 50}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{10, 20, 30, 40}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 10, 20, 30}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in 'programming' if x in 'aeiou'}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'o', 'a', 'i'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'p', 'r', 'o', 'g', 'a', 'm', 'i', 'n'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'o', 'a'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'o', 'a', 'i', 'e'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x * 5 for x in range(4)}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 5, 10, 15}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 5, 10}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in range(100) if x &lt; 10}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1, 2, 3, 4, 5, 6, 7, 8, 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 1, 2, 3, 4, 5, 6, 7, 8}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>s = {x for x in 'abcdefghij' if x not in 'abc'}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'d', 'e', 'f', 'g', 'h', 'i', 'j'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'d', 'e', 'f', 'g', 'h', 'i'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a', 'b', 'c'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Comprehensions/tuple",
        "questions": [
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = (x for x in range(3))\nprint(tuple(t))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>(0, 1, 2)</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[0, 1, 2]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 1, 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple(x * 2 for x in range(3))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple contenant les valeurs (0, 2, 4).",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste contenant les valeurs [0, 2, 4].",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set contenant les valeurs {0, 2, 4}.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple(x for x in range(5) if x % 2 == 0)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>(0, 2, 4)</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>(1, 3)</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[0, 2, 4]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(2) for y in range(2))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple de tuples contenant toutes les combinaisons de (x, y) pour x et y dans [0, 1].",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste de tuples contenant toutes les combinaisons de (x, y) pour x et y dans [0, 1].",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set de tuples contenant toutes les combinaisons de (x, y) pour x et y dans [0, 1].",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(2) for y in range(2))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>((0, 0), (0, 1), (1, 0), (1, 1))</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(0, 0), (0, 1), (1, 0), (1, 1)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{(0, 0), (0, 1), (1, 0), (1, 1)}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple(x + y for x in range(2) for y in range(2))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple contenant les sommes de x et y pour toutes les combinaisons de x et y dans [0, 1].",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste contenant les sommes de x et y pour toutes les combinaisons de x et y dans [0, 1].",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set contenant les sommes de x et y pour toutes les combinaisons de x et y dans [0, 1].",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple(x + y for x in range(2) for y in range(2))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>(0, 1, 1, 2)</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[0, 1, 1, 2]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 1, 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple(x for x in range(10) if x % 3 == 0)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple contenant les multiples de 3 entre 0 et 9.",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste contenant les multiples de 3 entre 0 et 9.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set contenant les multiples de 3 entre 0 et 9.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple(x for x in range(10) if x % 3 == 0)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>(0, 3, 6, 9)</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[0, 3, 6, 9]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 3, 6, 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(3) for y in range(3) if x == y)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple de tuples contenant les paires (x, y) où x est égal à y.",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste de tuples contenant les paires (x, y) où x est égal à y.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set de tuples contenant les paires (x, y) où x est égal à y.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(3) for y in range(3) if x == y)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>((0, 0), (1, 1), (2, 2))</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(0, 0), (1, 1), (2, 2)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{(0, 0), (1, 1), (2, 2)}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple(x ** 2 for x in range(5))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple contenant les carrés des nombres de 0 à 4.",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste contenant les carrés des nombres de 0 à 4.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set contenant les carrés des nombres de 0 à 4.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple(x ** 2 for x in range(5))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>(0, 1, 4, 9, 16)</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[0, 1, 4, 9, 16]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 1, 4, 9, 16}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(2) for y in range(3))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple de tuples contenant toutes les combinaisons de (x, y) pour x dans [0, 1] et y dans [0, 1, 2].",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste de tuples contenant toutes les combinaisons de (x, y) pour x dans [0, 1] et y dans [0, 1, 2].",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set de tuples contenant toutes les combinaisons de (x, y) pour x dans [0, 1] et y dans [0, 1, 2].",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(2) for y in range(3))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>((0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2))</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2)}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple(x for x in range(10) if x % 2 == 0 and x % 3 == 0)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple contenant les nombres entre 0 et 9 qui sont divisibles par 2 et 3.",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère un tuple contenant les nombres entre 0 et 9 qui sont divisibles par 2, mais pas par 3.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set contenant les nombres entre 0 et 9 qui sont divisibles par 2 et 3.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple(x for x in range(10) if x % 2 == 0 and x % 3 == 0)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>(0, 6)</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[0, 6]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0, 6}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple((x, y, z) for x in range(2) for y in range(2) for z in range(2))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple de tuples contenant toutes les combinaisons de (x, y, z) pour x, y et z dans [0, 1].",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste de tuples contenant toutes les combinaisons de (x, y, z) pour x, y et z dans [0, 1].",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set de tuples contenant toutes les combinaisons de (x, y, z) pour x, y et z dans [0, 1].",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple((x, y, z) for x in range(2) for y in range(2) for z in range(2))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>((0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1))</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(3) if x % 2 == 0 for y in range(3) if y % 2 != 0)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple de tuples contenant les paires (x, y) où x est pair et y est impair.",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste de tuples contenant les paires (x, y) où x est pair et y est impair.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set de tuples contenant les paires (x, y) où x est pair et y est impair.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(3) if x % 2 == 0 for y in range(3) if y % 2 != 0)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>((0, 1), (2, 1))</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(0, 1), (2, 1)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{(0, 1), (2, 1)}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(4) for y in range(x))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple de tuples contenant les paires (x, y) où y est inférieur à x.",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste de tuples contenant les paires (x, y) où y est inférieur à x.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set de tuples contenant les paires (x, y) où y est inférieur à x.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(4) for y in range(x))\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>((1, 0), (2, 0), (2, 1), (3, 0), (3, 1), (3, 2))</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 0), (2, 0), (2, 1), (3, 0), (3, 1), (3, 2)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{(1, 0), (2, 0), (2, 1), (3, 0), (3, 1), (3, 2)}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(3) for y in range(3) if x + y == 2)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un tuple de tuples contenant les paires (x, y) où x + y est égal à 2.",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste de tuples contenant les paires (x, y) où x + y est égal à 2.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set de tuples contenant les paires (x, y) où x + y est égal à 2.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nt = tuple((x, y) for x in range(3) for y in range(3) if x + y == 2)\nprint(t)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>((0, 2), (1, 1), (2, 0))</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(0, 2), (1, 1), (2, 0)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{(0, 2), (1, 1), (2, 0)}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Comprehensions/dict",
        "questions": [
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nd = {x: x**2 for x in range(3)}\nprint(d)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 4}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 4: 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 1, 1: 4, 2: 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 1, 2: 4, 3: 9}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\nd = {x: y for x in range(5) if x &gt; 2 for y in range(x)}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{3: 2, 4: 3}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{3: 0, 4: 0, 4: 1, 4: 2, 4: 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{3: 0, 3: 1, 3: 2, 4: 0, 4: 1, 4: 2, 4: 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{3: 0, 4: 0}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de ce code ?</p>\n<pre><code>\nd = {x: x**2 for x in [1, 2, 3]}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{1: 1, 2: 4, 3: 9}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{1: 1, 2: 2, 3: 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 2, 2: 4, 3: 6}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{2: 4, 4: 16, 6: 36}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que renvoie le code suivant ?</p>\n<pre><code>\nd = {char: (i**2) for i, char in enumerate('abc')}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'a': 0, 'b': 1, 'c': 4}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'a': 1, 'b': 4, 'c': 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a': 0, 'b': 4, 'c': 16}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a': 1, 'b': 2, 'c': 3}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nlst = [1, 2, 3]\nd = {x: x*2 for x in lst}\nprint(d)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{1: 2, 2: 4, 3: 6}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{1: 1, 2: 2, 3: 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 2, 4: 4, 9: 6}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{2: 2, 4: 4, 6: 6}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de ce code ?</p>\n<pre><code>\nd = {x: 'pair' if x % 2 == 0 else 'impair' for x in range(5)}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 'pair', 1: 'impair', 2: 'pair', 3: 'impair', 4: 'pair'</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 'impair', 1: 'pair', 2: 'impair', 3: 'pair', 4: 'impair'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 'pair', 1: 'pair', 2: 'pair', 3: 'pair', 4: 'pair'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 'impair', 1: 'impair', 2: 'impair', 3: 'impair', 4: 'impair'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Qu'affiche le code suivant ?</p>\n<pre><code>\nd = {x: x for x in range(10) if x % 2 != 0}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{1: 1, 3: 3, 5: 5, 7: 7, 9: 9}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 2: 2, 4: 4, 6: 6, 8: 8}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 1, 2: 2, 3: 3, 4: 4, 5: 5}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 2, 3: 3, 4: 4}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code ?</p>\n<pre><code>\nd = {i: i*10 for i in range(3)}\nprint(d)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 1: 10, 2: 20}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 10, 1: 20, 2: 30}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{10: 0, 20: 1, 30: 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 10, 2: 20, 3: 30}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Qu'affiche le code suivant ?</p>\n<pre><code>\noriginal = {'a': 1, 'b': 2, 'c': 3}\nd = {value: key for key, value in original.items()}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{1: 'a', 2: 'b', 3: 'c'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{'a': 1, 'b': 2, 'c': 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a': 'b', 'b': 'c', 'c': 'a'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 'b', 2: 'c', 3: 'a'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code ?</p>\n<pre><code>\nlst = ['a', 'b', 'c']\nd = {x: i for i, x in enumerate(lst)}\nprint(d)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{'a': 0, 'b': 1, 'c': 2}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 'a', 1: 'b', 2: 'c'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a': 1, 'b': 2, 'c': 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{'a': 'a', 'b': 'b', 'c': 'c'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment créer un dictionnaire où chaque clé est un nombre pair de 0 à 8 et chaque valeur est la somme de ses chiffres ?</p>\n<pre><code>\nd = {x: sum(int(digit) for digit in str(x)) for x in range(10) if x % 2 == 0}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 2: 2, 4: 4, 6: 6, 8: 8}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 2, 3: 3, 4: 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 0, 1: 0, 2: 2, 3: 3, 4: 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{2: 2, 4: 4, 6: 6, 8: 8}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel dictionnaire est créé par ce code ?</p>\n<pre><code>\nd = {x: x*2 for x in range(4)}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 1: 2, 2: 4, 3: 6}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 1, 1: 2, 2: 3, 3: 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 2, 2: 4, 3: 6, 4: 8}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 2, 2: 4, 4: 6, 6: 8}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nd = {x: 'negatif' if x &lt; 0 else 'positif' for x in [-1, 0, 1]}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{-1: 'negatif', 0: 'positif', 1: 'positif'}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{-1: 'positif', 0: 'negatif', 1: 'negatif'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{-1: 'negatif', 0: 'negatif', 1: 'positif'}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 'positif', 1: 'positif', -1: 'negatif'}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment créer un dictionnaire où chaque clé est un nombre et chaque valeur est son double si le nombre est pair, sinon le nombre lui-même ?</p>\n<pre><code>\nd = {x: x * 2 if x % 2 == 0 else x for x in range(5)}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 4, 3: 3, 4: 8}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 2, 2: 4, 3: 6, 4: 8}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 1, 1: 1, 2: 1, 3: 1, 4: 1}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 2, 1: 2, 2: 2, 3: 2, 4: 2}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\nd = {x: x + y for x in range(2) for y in range(2)}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 1, 1: 2}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 1, 1: 2, 2: 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait le code suivant ?<br/>\n<pre><code>\nd = {x: y for x in range(3) for y in range(x)}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un dictionnaire où les clés sont les nombres de 0 à 2 et les valeurs sont les nombres de 0 à x-1.",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste de tuples.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set de paires clé-valeur.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait le code suivant ?<br/>\n<pre><code>\nd = {x: x**2 for x in range(4) if x % 2 == 0}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Il génère un dictionnaire contenant les carrés des nombres pairs de 0 à 3.",
                        "fraction": 100
                    },
                    {
                        "text": "Il génère une liste de carrés.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère un set de carrés.",
                        "fraction": 0
                    },
                    {
                        "text": "Il génère une erreur.",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: x**2 for x in range(4) if x % 2 == 0}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 2: 4}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 0, 2: 4, 4: 16}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: x + y for x in range(2) for y in range(2) if x == y}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 1: 2}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 0, 1: 2, 2: 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: y for x in range(3) for y in range(3) if x + y == 2}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 2, 1: 1, 2: 0}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 2, 1: 1}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 2, 1: 1, 2: 0, 3: -1}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: x * y for x in range(3) for y in range(3) if x == y}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 4}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 4, 3: 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: y for x in range(4) for y in range(x) if x % 2 == 0}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{2: 1}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 2: 1}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{2: 1, 4: 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: x + y for x in range(3) for y in range(3) if x > y}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{1: 1, 2: 3}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{1: 1, 2: 3, 3: 5}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 1}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: x**2 for x in range(3)}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 4}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 4, 3: 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: x + 1 for x in range(3)}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 1, 1: 2, 2: 3}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 1, 2: 2, 3: 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: x**3 for x in range(3)}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 8}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 8, 3: 27}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: x for x in range(5) if x % 2 == 0}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 2: 2, 4: 4}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 2, 3: 3, 4: 4}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 1, 3: 3}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: x**2 for x in range(6) if x % 3 == 0}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 0, 3: 9}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 3: 9}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 0, 3: 9, 6: 36}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {(x, y): x + y for x in range(2) for y in range(2)}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{(0, 0): 0, (0, 1): 1, (1, 0): 1, (1, 1): 2}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{(0, 0): 0, (0, 1): 1, (1, 0): 1}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{(0, 0): 0, (1, 1): 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?<br/>\n<pre><code>\nd = {x: y for x in range(3) for y in range(3)}\nprint(d)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{0: 2, 1: 2, 2: 2}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{0: 0, 1: 1, 2: 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{0: 2, 1: 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Comprehensions/comprehensionplus",
        "questions": [
            {
                "text": "<p>Quel est le résultat de cette compréhension imbriquée de liste avec une condition ?</p>\n<pre><code>\nnested_list = [[j for j in range(i) if j % 2 == 0] for i in range(4)]\nprint(nested_list)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[[], [0], [0], [0, 2]]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[[0], [0, 1], [0, 1, 2], [0, 1, 2, 3]]</pre>\n<pre> </pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[[0], [0, 2], [0, 2, 4], [0, 2, 4, 6]]</pre>\n<pre> </pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[[], [0], [0, 1], [0, 1, 2]]</pre>\n<pre> </pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment créer un dictionnaire avec des clés qui sont des tuples de paires de nombres impairs, et des valeurs qui sont la somme de ces nombres ?</p>\n<pre><code>\nd = {(x, y): x + y for x in range(5) if x % 2 != 0 for y in range(5) if y % 2 != 0}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{(1, 1): 2, (1, 3): 4, (3, 1): 4, (3, 3): 6}</pre>\n<pre> </pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>{(0, 0): 0, (1, 1): 2, (2, 2): 4, (3, 3): 6, (4, 4): 8}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{(1, 2): 3, (1, 4): 5, (3, 2): 5, (3, 4): 7}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{(1, 1): 1, (1, 3): 1, (3, 1): 3, (3, 3): 3}</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code utilisant une compréhension de liste pour créer une matrice identité ?</p>\n<pre><code>\nidentity_matrix = [[1 if i == j else 0 for j in range(3)] for i in range(3)]\nprint(identity_matrix)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[[1, 0, 0], [0, 1, 0], [0, 0, 1]]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[[0, 0, 0], [0, 0, 0], [0, 0, 0]]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[[1, 1, 1], [1, 1, 1], [1, 1, 1]]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[[0, 1, 0], [1, 0, 1], [0, 1, 0]]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment créer un ensemble de tuples contenant chaque combinaison possible de deux mots de deux listes données ?</p>\n<pre><code>\nwords1 = ['a', 'b']\nwords2 = ['x', 'y', 'z']\ncombinations = {(w1, w2) for w1 in words1 for w2 in words2}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{('a', 'x'), ('a', 'y'), ('a', 'z'), ('b', 'x'), ('b', 'y'), ('b', 'z')}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{('a', 'b', 'x', 'y', 'z')}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{('a', 'x'), ('b', 'y'), ('a', 'z')}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{('a', 'b'), ('x', 'y', 'z')}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de cette compréhension de liste avec transformation de chaînes et conditions multiples ?</p>\n<pre><code>\nlst = [\n    word.upper() if len(word) &gt; 3 else word.lower()\n    for word in [\"Python\", \"is\", \"fun\", \"to\", \"learn\"]\n    if not word.startswith(\"t\")\n]\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>['PYTHON', 'is', 'fun', 'LEARN']</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>['Python', 'is', 'fun', 'to', 'learn']</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>['PYTHON', 'IS', 'FUN', 'TO', 'LEARN']</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>['python', 'is', 'fun', 'learn']</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment créer un dictionnaire où les clés sont les éléments uniques d'une liste, et les valeurs sont le nombre d'occurrences de chaque élément dans cette liste ?</p>\n<pre><code>\nlst = [1, 2, 2, 3, 4, 1, 5, 5, 3]\nd = {item: lst.count(item) for item in set(lst)}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{1: 2, 2: 2, 3: 2, 4: 1, 5: 2}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{1: 1, 2: 2, 3: 2, 4: 1, 5: 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 2, 2: 1, 3: 1, 4: 1, 5: 2}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: 1, 2: 1, 3: 1, 4: 1, 5: 1}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de cette compréhension de liste qui utilise `enumerate()` et une condition pour créer des paires conditionnelles ?</p>\n<pre><code>\nlst = [\"a\", \"b\", \"c\", \"d\"]\nresult = [\n    (index, char)\n    for index, char in enumerate(lst)\n    if index % 2 == 0 or char in [\"b\", \"d\"]\n]\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(0, 'a'), (1, 'b'), (2, 'c'), (3, 'd')]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(0, 'a'), (2, 'c')]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'b'), (3, 'd')]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(0, 'a'), (3, 'd')]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment créer une liste de tuples où chaque tuple contient un nombre pair de 0 à 8 et tous ses diviseurs ?</p>\n<pre><code>\ndivisors_list = [\n    (num, [i for i in range(1, num + 1) if num % i == 0])\n    for num in range(0, 10)\n    if num % 2 == 0\n]\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(0, []), (2, [1, 2]), (4, [1, 2, 4]), (6, [1, 2, 3, 6]), (8, [1, 2, 4, 8])]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(0, [0]), (2, [1, 2]), (4, [1, 2, 4]), (6, [1, 2, 3, 6]), (8, [1, 2, 4, 8])]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(2, [1, 2]), (4, [1, 2, 4]), (6, [1, 2, 3, 6]), (8, [1, 2, 4, 8])]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(0, [0]), (2, [2]), (4, [4]), (6, [6]), (8, [8])]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie de ce code utilisant une compréhension de liste pour créer une séquence de Fibonacci ?</p>\n<pre><code>\n</code></pre>\n<div style=\"color: #000000; background-color: #ffffff; font-family: Jetbrains Mono, Menlo, Monaco, 'Courier New', monospace, Consolas, 'Courier New', monospace; font-weight: normal; font-size: 18px; line-height: 24px; white-space: pre;\">\n<div><span style=\"color: #000000;\">n = </span><span style=\"color: #098658;\">10</span></div>\n<div><span style=\"color: #000000;\">fibonacci = [</span><span style=\"color: #098658;\">0</span><span style=\"color: #000000;\">, </span><span style=\"color: #098658;\">1</span><span style=\"color: #000000;\">] + [fibonacci[i - </span><span style=\"color: #098658;\">1</span><span style=\"color: #000000;\">] + fibonacci[i - </span><span style=\"color: #098658;\">2</span><span style=\"color: #000000;\">] </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> i </span><span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> range(</span><span style=\"color: #098658;\">2</span><span style=\"color: #000000;\">, n)]</span></div>\n<div><span style=\"color: #000000;\">print(fibonacci)</span></div>\n</div>\n<pre><code>\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[1, 1, 2, 3, 5, 8, 13, 21, 34]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[0, 1, 2, 3, 5, 8, 13, 21, 34, 55]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[0, 1, 2, 4, 7, 12, 20, 33, 54, 88]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment créer un dictionnaire où chaque clé est un nombre de 1 à 5 et chaque valeur est une liste des carrés de tous les nombres inférieurs ou égaux à cette clé ?</p>\n<pre><code>\nd = {\n    i: [j**2 for j in range(1, i + 1)]\n    for i in range(1, 6)\n}\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>{1: [1], 2: [1, 4], 3: [1, 4, 9], 4: [1, 4, 9, 16], 5: [1, 4, 9, 16, 25]}</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>{1: [1], 2: [4], 3: [9], 4: [16], 5: [25]}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: [0], 2: [0, 1], 3: [0, 1, 4], 4: [0, 1, 4, 9], 5: [0, 1, 4, 9, 16]}</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{1: [0], 2: [0, 4], 3: [0, 4, 9], 4: [0, 4, 9, 16], 5: [0, 4, 9, 16, 25]}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Fonctions/*args",
        "questions": [
            {
                "text": "<pre><code>\ndef fonction_travail(*args):\n    print(args)\n\nfonction_travail(1, 2, 3)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "(1, 2, 3)",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "1, 2, 3",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(*args):\n   return sum(args)\n\nresultat = fonction_travail(10, 20, 30)\n</code></pre>Quel est le contenu de `resultat` ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "60",
                        "fraction": 100
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "30",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(*args):\n   print(type(args))\n\nfonction_travail(1, 2, 3)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "&lt;class 'tuple'&gt;",
                        "fraction": 100
                    },
                    {
                        "text": "&lt;class 'list'&gt;",
                        "fraction": 0
                    },
                    {
                        "text": "&lt;class 'int'&gt;",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(*args):\n   return len(args)\n\nresultat = fonction_travail(1, 2, 3, 4)\n</code></pre>Quel est le contenu de `resultat` ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "4",
                        "fraction": 100
                    },
                    {
                        "text": "3",
                        "fraction": 0
                    },
                    {
                        "text": "2",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(*args):\n    print(args[0])\n\nfonction_travail(10, 20, 30)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "10",
                        "fraction": 100
                    },
                    {
                        "text": "20",
                        "fraction": 0
                    },
                    {
                        "text": "30",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(*args):\n    print(args[-1])\n\nfonction_travail(10, 20, 30)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "30",
                        "fraction": 100
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "20",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(*args):\n    for arg in args:\n        print(arg)\n\nfonction_travail(1, 2, 3)\n</code></pre>\n<p>Quel est le résultat de l'exécution de ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>1\n2\n3</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>(1, 2, 3)</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1, 2, 3]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur de syntaxe</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(*args):\n    for arg in reversed(args):\n        print(arg)\n\nfonction_travail(1, 2, 3)\n</code></pre>\n<p>Quel est le résultat de l'exécution de ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>3\n2\n1\n</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>1\n2\n3\n</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>(3, 2, 1)</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur de syntaxe</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Qu'affiche le code suivant :</p>\n<pre><code>\ndef fonction_travail(*args):\n    for index, arg in enumerate(reversed(args), start=1):\n        print(f\"{index}: {arg}\")\n\nfonction_travail(10, 20, 30)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>1: 30\n2: 20\n3: 10\n</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>1: 10\n2: 20\n3: 30\n</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>(1: 30, 2: 20, 3: 10)</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1: 30, 2: 20, 3: 10]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Qu'affiche le code suivant :</p>\n<pre><code>\ndef fonction_travail(*args):\n    for index, arg in enumerate(reversed(args)):\n        print(f\": {arg}\")\n\nfonction_travail(10, 20, 30)\n</code> </pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>: 30\n: 20\n: 10\n</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>1: 30\n2: 20\n3: 10\n</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>0: 30\n1: 20\n2: 10\n</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>(: 30, : 20, : 10)</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(*args):\n    for index, arg in enumerate(reversed(args), start=1):\n        print(f\": {arg}\")\n\nfonction_travail(10, 20, 30)\n</code></pre>\n<p>Quel est le résultat de l'exécution de ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>1: 30\n2: 20\n3: 10 </pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>1: 10\n2: 20\n3: 30</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>(1: 30, 2: 20, 3: 10)</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur de syntaxe</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Fonctions/**kwargs",
        "questions": [
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    for key, value in kwargs.items():\n        print(f\"{key}: {value}\")\n\nfonction_travail(nom=\"Alice\", age=25)\n</code></pre>\n<p>Quel est le résultat de l'exécution de ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>nom: Alice age: 25</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>nom: Alice</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>age: 25</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>nom= Alice age= 25</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur de syntaxe</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre style=\"border: 2px solid; border-radius: 5px; padding: 10px;\"><code>\ndef fonction_travail(**kwargs):\n    del(kwargs[\"x\"])\n    return kwargs\n\nresultat = fonction_travail(x=10, y=20)\n</code></pre>\n<p>Quel est le contenu de `resultat` ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>{\"y\": 20}</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>{\"x\": 10, \"y\": 20}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{\"x\": 10}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur de syntaxe</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(type(kwargs))\n\nfonction_travail(a=1, b=2)\n</code></pre>\n<p>Quel est le résultat de l'exécution de ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>&lt;class 'dict'&gt;</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>&lt;class 'list'&gt;</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>&lt;class 'tuple'&gt;</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>&lt;class 'str'&gt;</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    return len(kwargs)\n\nresultat = fonction_travail(a=1, b=2, c=3)\n</code></pre>Quel est le contenu de `resultat` ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "3",
                        "fraction": 100
                    },
                    {
                        "text": "2",
                        "fraction": 0
                    },
                    {
                        "text": "1",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(kwargs.get(\"x\"))\n\nfonction_travail(x=10, y=20)\n</code></pre>\n<p>Quel est le résultat de l'exécution de ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>10</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>20</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>None</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur de syntaxe</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(kwargs.get(\"z\", 100))\n\nfonction_travail(x=10, y=20)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "100",
                        "fraction": 100
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "20",
                        "fraction": 0
                    },
                    {
                        "text": "None",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(list(kwargs.keys()))\n\nfonction_travail(a=1, b=2, c=3)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "['a', 'b', 'c']",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "['a', 'b']",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(list(kwargs.values()))\n\nfonction_travail(a=1, b=2, c=3)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 100
                    },
                    {
                        "text": "['a', 'b', 'c']",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 2]",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(list(kwargs.items()))\n\nfonction_travail(a=1, b=2)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[('a', 1), ('b', 2)]",
                        "fraction": 100
                    },
                    {
                        "text": "['a', 'b']",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 2]",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(kwargs[\"x\"])\n\nfonction_travail(x=10, y=20)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "10",
                        "fraction": 100
                    },
                    {
                        "text": "20",
                        "fraction": 0
                    },
                    {
                        "text": "None",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(kwargs[\"z\"])\n\nfonction_travail(x=10, y=20)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 100
                    },
                    {
                        "text": "None",
                        "fraction": 0
                    },
                    {
                        "text": "10",
                        "fraction": 0
                    },
                    {
                        "text": "20",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    return kwargs\n\nd1 = {\"a\": 1, \"b\": 2}\nd2 = {\"c\": 3, \"d\": 4}\n\nresultat = fonction_travail(**d1, **d2)\n</code></pre>Quel est le contenu de `resultat` ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "{\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4}",
                        "fraction": 100
                    },
                    {
                        "text": "{\"a\": 1, \"b\": 2}",
                        "fraction": 0
                    },
                    {
                        "text": "{\"c\": 3, \"d\": 4}",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef afficher_kwargs(**kwargs):\n    print(kwargs.get('c', 'Clé non trouvée'))\n\nafficher_kwargs(a=1, b=2)\n</code></pre>\n<p>Quel est le résultat de l'exécution de ce code ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Clé non trouvée</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>0</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>None</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Erreur</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la valeur de result ?</p>\n<pre><code>def update_dict(base, **kwargs):\n    return {**base, **kwargs}\n\nbase = {\"a\": 1, \"b\": 2}\nresult = update_dict(base, a=3, c=4)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>{'a': 3, 'b': 2, 'c': 4}</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>{'a': 1, 'b': 2, 'c': 4}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{'a': [1, 3], 'b': 2, 'c': 4}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>TypeError: multiple values for key 'a'</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    for key, value in kwargs.items():\n        print(f\"{key}: {value}\")\n\nfonction_travail(a=1, b=2)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "a: 1\nb: 2",
                        "fraction": 100
                    },
                    {
                        "text": "1: a\n2: b",
                        "fraction": 0
                    },
                    {
                        "text": "a, b",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    for value, key in kwargs.items():\n        print(f\"{value}: {key}\")\n\nfonction_travail(a=1, b=2)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "1: a\n2: b",
                        "fraction": 100
                    },
                    {
                        "text": "a: 1\nb: 2",
                        "fraction": 0
                    },
                    {
                        "text": "a, b",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    for index, (key, value) in enumerate(kwargs.items()):\n        print(f\"{index}: {key}: {value}\")\n\nfonction_travail(a=1, b=2)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "0: a: 1\n1: b: 2",
                        "fraction": 100
                    },
                    {
                        "text": "a: 1\nb: 2",
                        "fraction": 0
                    },
                    {
                        "text": "0: 1\n1: 2",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    for index, (value, key) in enumerate(kwargs.items()):\n        print(f\"{index}: {value}: {key}\")\n\nfonction_travail(a=1, b=2)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "0: 1: a\n1: 2: b",
                        "fraction": 100
                    },
                    {
                        "text": "0: a: 1\n1: b: 2",
                        "fraction": 0
                    },
                    {
                        "text": "a: 1\nb: 2",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    for index, (value, key) in enumerate(kwargs.items(), start=1):\n        print(f\"{index}: {value}: {key}\")\n\nfonction_travail(a=1, b=2)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "1: 1: a\n2: 2: b",
                        "fraction": 100
                    },
                    {
                        "text": "0: a: 1\n1: b: 2",
                        "fraction": 0
                    },
                    {
                        "text": "a: 1\nb: 2",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    for index, (value, key) in enumerate(kwargs.items(), start=1):\n        print(f\"{index}: {value}: {key}\")\n\nfonction_travail(a=1, b=2)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "1: 1: a\n2: 2: b",
                        "fraction": 100
                    },
                    {
                        "text": "0: a: 1\n1: b: 2",
                        "fraction": 0
                    },
                    {
                        "text": "a: 1\nb: 2",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(kwargs.values())\n\nfonction_travail(x=10, y=20)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "dict_values([10, 20])",
                        "fraction": 100
                    },
                    {
                        "text": "10, 20",
                        "fraction": 0
                    },
                    {
                        "text": "x: 10, y: 20",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    return kwargs\n\nd = fonction_travail(a=1, b=2, c=3)\n</code></pre>Quel est le type de `d` ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "dict",
                        "fraction": 100
                    },
                    {
                        "text": "list",
                        "fraction": 0
                    },
                    {
                        "text": "tuple",
                        "fraction": 0
                    },
                    {
                        "text": "str",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie de ce code ?</p>\n<pre><code>def fonction_travail(**kwargs):\n    base = {\"config\": {\"debug\": False}}\n    return {**base, \"config\": {**base[\"config\"], **kwargs}}\n\nprint(fonction_travail(debug=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>{\"config\": {\"debug\": True}}</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>{\"config\": {\"debug\": False}}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{\"config\": {\"debug\": False, \"debug\": True}}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>TypeError: nested dictionary update not supported</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(kwargs.keys())\n\nfonction_travail(nom=\"Bob\", age=30)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "dict_keys(['nom', 'age'])",
                        "fraction": 100
                    },
                    {
                        "text": "nom, age",
                        "fraction": 0
                    },
                    {
                        "text": "Bob, 30",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    kwargs[\"nouveau\"] = 100\n    return kwargs\n\nresultat = fonction_travail(a=1, b=2)\n</code></pre>Quel est le contenu de `resultat` ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "{\"a\": 1, \"b\": 2, \"nouveau\": 100}",
                        "fraction": 100
                    },
                    {
                        "text": "{\"a\": 1, \"b\": 2}",
                        "fraction": 0
                    },
                    {
                        "text": "{\"nouveau\": 100}",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(kwargs)\n\nfonction_travail()\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "{}",
                        "fraction": 100
                    },
                    {
                        "text": "None",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    },
                    {
                        "text": "Aucune sortie",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    kwargs[\"x\"] = 50\n    return kwargs\n\nresultat = fonction_travail(x=10, y=20)\n</code></pre>Quel est le contenu de `resultat` ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "{\"x\": 50, \"y\": 20}",
                        "fraction": 100
                    },
                    {
                        "text": "{\"x\": 10, \"y\": 20}",
                        "fraction": 0
                    },
                    {
                        "text": "{\"x\": 50}",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<pre><code>\ndef fonction_travail(**kwargs):\n    print(kwargs.items())\n\nfonction_travail(a=1, b=2)\n</code></pre>Quel est le résultat de l'exécution de ce code ?",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "dict_items([('a', 1), ('b', 2)])",
                        "fraction": 100
                    },
                    {
                        "text": "a: 1, b: 2",
                        "fraction": 0
                    },
                    {
                        "text": "1, 2",
                        "fraction": 0
                    },
                    {
                        "text": "Erreur de syntaxe",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait ce code ?</p>\n<pre><code>def fonction_travail(**kwargs):\n    required = {\"name\", \"age\"}\n    missing = required - set(kwargs.keys())\n    if missing:\n        print(f\"Missing keys: {missing}\")</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Vérifie si les clés obligatoires 'name' et 'age' sont présentes</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Supprime les clés 'name' et 'age' du dictionnaire</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute les clés 'name' et 'age' si elles sont manquantes</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Compare les valeurs de 'name' et 'age' avec des valeurs par défaut</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie de cette fonction ?</p>\n<pre><code>def chain_dicts(**kwargs):\n    result = {}\n    for k, v in kwargs.items():\n        if isinstance(v, dict):\n            result = {**result, **v}\n    return result\n\nprint(fonction_travail(d1={\"a\": 1}, d2={\"b\": 2}, x=42,d3={\"b\": 3}, d4={\"c\": 4}))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>{'a': 1, 'b': 3, 'c': 4}</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>{'d1': {\"a\": 1}, 'd2': {\"b\": 2}, 'x': 42}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{'a': 1, 'b': 2, 'x': 42}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{'a': 1, 'b': 2, 'c': 4}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{'a': 1, 'b': 5, 'c': 4}</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Qu'imprime ce code ?</p>\n<pre><code>\ndef fonction_travail(**kwargs):\n    type_map = {\"name\": (str,'str'), \"age\": (int,'int')}\n    for k, v in kwargs.items():\n        if k in type_map and not isinstance(v, type_map[k][0]):\n            print(f\"{k} must be of type {type_map[k][1]}\")\n        \nfonction_travail(name=\"Bob\", age=\"25\")\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>age must be of type int</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>age must be of type &lt;class 'int'&gt;</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Il n'affiche rien</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>name must be of type str</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie de cette fonction ?</p>\n<pre><code>\ndef fonction_travail(**kwargs):\n    result = []\n    for v in kwargs.values():\n        if isinstance(v, list):\n            result += v\n    return result\n\nprint(fonction_travail(a=[1, 2], b=\"hello\", c=[3, 4]))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[1, 2, 3, 4]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[[1, 2], [3, 4]]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{'a': [1, 2], 'c': [3, 4]}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>TypeError: cannot merge non-list values</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Comment corriger cette fonction pour qu'elle fonctionne ?\n<pre><code>def create_user(nom, prenom, kwargs):\n    user = {\n        \"nom\": nom,\n        \"prenom\": prenom,\n        **kwargs\n    }</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "def create_user(nom, prenom, **kwargs):",
                        "fraction": 100
                    },
                    {
                        "text": "def create_user(nom, prenom, *kwargs):",
                        "fraction": 0
                    },
                    {
                        "text": "def create_user(**nom, **prenom, **kwargs):",
                        "fraction": 0
                    },
                    {
                        "text": "def create_user(nom, prenom, kwargs**):",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la valeur de result ?</p>\n<pre><code>\ndef fonction_travail(**kwargs):\n    base = {\"a\": 1, \"b\": 2}\n    return {**base, **kwargs}\n\nresult = fonction_travail(b=3, c=4)\n\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>{'a': 1, 'b': 3, 'c': 4}</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>{'a': 1, 'b': 2, 'b': 3, 'c': 4}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{'b': 3, 'c': 4}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>{'a': 1, 'b': 2}</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Comment modifier ce code pour qu'il fonctionne ?\n<pre><code>d1 = {\"a\": 1}\nd2 = {\"b\": 2}\ndef merge(d1, d2):\n    return {**d1, d2}</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "return {**d1, **d2}",
                        "fraction": 100
                    },
                    {
                        "text": "return {*d1, *d2}",
                        "fraction": 0
                    },
                    {
                        "text": "return dict(d1, d2)",
                        "fraction": 0
                    },
                    {
                        "text": "return {d1, d2}",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Prog fonctionnelle",
        "questions": []
    },
    {
        "category": "top/002_LURET Python_niveau2/Prog fonctionnelle/map",
        "questions": [
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef double(x):\n    return x * 2\n\nresult = list(map(double, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[2, 4, 6]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[2, 3, 4]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 4, 9]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait la fonction `map` dans le code suivant ?\n<pre><code>\ndef carre(x):\n    return x ** 2\n\nresult = map(carre, [1, 2, 3, 4])\nprint(list(result))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Applique la fonction `carre` à chaque élément de la liste",
                        "fraction": 100
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    },
                    {
                        "text": "Ajoute 1 à chaque élément de la liste",
                        "fraction": 0
                    },
                    {
                        "text": "Multiplie chaque élément de la liste par 2",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef triple(x):\n    return x * 3\n\nresult = list(map(triple, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[3, 6, 9]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[3, 4, 5]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 4, 9]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef ajouter_un(x):\n    return x + 1\n\nresult = list(map(ajouter_un, [0, 1, 2]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 100
                    },
                    {
                        "text": "[0, 1, 2]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    },
                    {
                        "text": "[0, 2, 4]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait le code suivant ?\n<pre><code>\ndef inverse(x):\n    return 1 / x\n\nresult = list(map(inverse, [1, 2, 4]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Calcule l'inverse de chaque élément de la liste",
                        "fraction": 100
                    },
                    {
                        "text": "Multiplie chaque élément de la liste par 2",
                        "fraction": 0
                    },
                    {
                        "text": "Ajoute 1 à chaque élément de la liste",
                        "fraction": 0
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef cube(x):\n    return x ** 3\n\nresult = list(map(cube, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 8, 27]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 4, 9]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef soustraire_un(x):\n    return x - 1\n\nresult = list(map(soustraire_un, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[0, 1, 2]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    },
                    {
                        "text": "[0, 2, 4]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait la fonction `map` dans le code suivant ?\n<pre><code>\ndef diviser_par_deux(x):\n    return x / 2\n\nresult = map(diviser_par_deux, [2, 4, 6])\nprint(list(result))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Divise chaque élément de la liste par 2",
                        "fraction": 100
                    },
                    {
                        "text": "Multiplie chaque élément de la liste par 2",
                        "fraction": 0
                    },
                    {
                        "text": "Ajoute 1 à chaque élément de la liste",
                        "fraction": 0
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef multiplier_par_trois(x):\n    return x * 3\n\nresult = list(map(multiplier_par_trois, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[3, 6, 9]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[3, 4, 5]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 4, 9]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef ajouter_deux(x):\n    return x + 2\n\nresult = list(map(ajouter_deux, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[3, 4, 5]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[2, 3, 4]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait le code suivant ?\n<pre><code>\ndef puissance_quatre(x):\n    return x ** 4\n\nresult = list(map(puissance_quatre, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Élève chaque élément de la liste à la puissance 4",
                        "fraction": 100
                    },
                    {
                        "text": "Multiplie chaque élément de la liste par 4",
                        "fraction": 0
                    },
                    {
                        "text": "Ajoute 4 à chaque élément de la liste",
                        "fraction": 0
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef soustraire_deux(x):\n    return x - 2\n\nresult = list(map(soustraire_deux, [2, 4, 6]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[0, 2, 4]",
                        "fraction": 100
                    },
                    {
                        "text": "[2, 4, 6]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    },
                    {
                        "text": "[0, 1, 2]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef diviser_par_trois(x):\n    return x / 3\n\nresult = list(map(diviser_par_trois, [3, 6, 9]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1.0, 2.0, 3.0]",
                        "fraction": 100
                    },
                    {
                        "text": "[3, 6, 9]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait la fonction `map` dans le code suivant ?\n<pre><code>\ndef multiplier_par_quatre(x):\n    return x * 4\n\nresult = map(multiplier_par_quatre, [1, 2, 3])\nprint(list(result))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Multiplie chaque élément de la liste par 4",
                        "fraction": 100
                    },
                    {
                        "text": "Divise chaque élément de la liste par 4",
                        "fraction": 0
                    },
                    {
                        "text": "Ajoute 4 à chaque élément de la liste",
                        "fraction": 0
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef ajouter_trois(x):\n    return x + 3\n\nresult = list(map(ajouter_trois, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[4, 5, 6]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[2, 3, 4]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef soustraire_trois(x):\n    return x - 3\n\nresult = list(map(soustraire_trois, [3, 4, 5]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[0, 1, 2]",
                        "fraction": 100
                    },
                    {
                        "text": "[3, 4, 5]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[0, 2, 4]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait le code suivant ?\n<pre><code>\ndef puissance_cinq(x):\n    return x ** 5\n\nresult = list(map(puissance_cinq, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Élève chaque élément de la liste à la puissance 5",
                        "fraction": 100
                    },
                    {
                        "text": "Multiplie chaque élément de la liste par 5",
                        "fraction": 0
                    },
                    {
                        "text": "Ajoute 5 à chaque élément de la liste",
                        "fraction": 0
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef diviser_par_cinq(x):\n    return x / 5\n\nresult = list(map(diviser_par_cinq, [5, 10, 15]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1.0, 2.0, 3.0]",
                        "fraction": 100
                    },
                    {
                        "text": "[5, 10, 15]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef multiplier_par_cinq(x):\n    return x * 5\n\nresult = list(map(multiplier_par_cinq, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[5, 10, 15]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[2, 3, 4]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait la fonction `map` dans le code suivant ?\n<pre><code>\ndef ajouter_cinq(x):\n    return x + 5\n\nresult = map(ajouter_cinq, [1, 2, 3])\nprint(list(result))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Ajoute 5 à chaque élément de la liste",
                        "fraction": 100
                    },
                    {
                        "text": "Multiplie chaque élément de la liste par 5",
                        "fraction": 0
                    },
                    {
                        "text": "Divise chaque élément de la liste par 5",
                        "fraction": 0
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef soustraire_cinq(x):\n    return x - 5\n\nresult = list(map(soustraire_cinq, [5, 6, 7]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[0, 1, 2]",
                        "fraction": 100
                    },
                    {
                        "text": "[5, 6, 7]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[0, 2, 4]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef puissance_six(x):\n    return x ** 6\n\nresult = list(map(puissance_six, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 64, 729]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 4, 9]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait le code suivant ?\n<pre><code>\ndef diviser_par_six(x):\n    return x / 6\n\nresult = list(map(diviser_par_six, [6, 12, 18]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Divise chaque élément de la liste par 6",
                        "fraction": 100
                    },
                    {
                        "text": "Multiplie chaque élément de la liste par 6",
                        "fraction": 0
                    },
                    {
                        "text": "Ajoute 6 à chaque élément de la liste",
                        "fraction": 0
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef multiplier_par_six(x):\n    return x * 6\n\nresult = list(map(multiplier_par_six, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[6, 12, 18]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[2, 3, 4]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef ajouter_six(x):\n    return x + 6\n\nresult = list(map(ajouter_six, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[7, 8, 9]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[2, 3, 4]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait la fonction `map` dans le code suivant ?\n<pre><code>\ndef soustraire_six(x):\n    return x - 6\n\nresult = map(soustraire_six, [6, 7, 8])\nprint(list(result))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Soustrait 6 de chaque élément de la liste",
                        "fraction": 100
                    },
                    {
                        "text": "Multiplie chaque élément de la liste par 6",
                        "fraction": 0
                    },
                    {
                        "text": "Divise chaque élément de la liste par 6",
                        "fraction": 0
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef puissance_sept(x):\n    return x ** 7\n\nresult = list(map(puissance_sept, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1, 128, 2187]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 4, 9]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle est la sortie du code suivant ?\n<pre><code>\ndef diviser_par_sept(x):\n    return x / 7\n\nresult = list(map(diviser_par_sept, [7, 14, 21]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[1.0, 2.0, 3.0]",
                        "fraction": 100
                    },
                    {
                        "text": "[7, 14, 21]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Que fait le code suivant ?\n<pre><code>\ndef multiplier_par_sept(x):\n    return x * 7\n\nresult = list(map(multiplier_par_sept, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "Multiplie chaque élément de la liste par 7",
                        "fraction": 100
                    },
                    {
                        "text": "Divise chaque élément de la liste par 7",
                        "fraction": 0
                    },
                    {
                        "text": "Ajoute 7 à chaque élément de la liste",
                        "fraction": 0
                    },
                    {
                        "text": "Trie les éléments de la liste",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quelle sera la sortie du code suivant ?\n<pre><code>\ndef ajouter_sept(x):\n    return x + 7\n\nresult = list(map(ajouter_sept, [1, 2, 3]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "[8, 9, 10]",
                        "fraction": 100
                    },
                    {
                        "text": "[1, 2, 3]",
                        "fraction": 0
                    },
                    {
                        "text": "[2, 3, 4]",
                        "fraction": 0
                    },
                    {
                        "text": "[1, 3, 5]",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\ndef fct(x):\n    return x.upper()\n\nresult = list(map(fct, ['a', 'b', 'c']))\n\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>['A', 'B', 'C']</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>['a', 'b', 'c']</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>['A', 'b', 'C']</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>['a', 'B', 'c']</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\ndef fct(x):\n    return len(x)\n\nresult = list(map(fct, ['apple', 'banana', 'cherry']))\n\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[5, 6, 6]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>['apple', 'banana', 'cherry']</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[5, 5, 6]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[6, 6, 6]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\ndef fct(x):\n    return x % 2\n\nresult = list(map(fct, [1, 2, 3, 4, 5]))\n\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[1, 0, 1, 0, 1]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[1, 2, 3, 4, 5]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[0, 1, 0, 1, 0]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[1, 1, 1, 0, 0]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<pre><code>\ndef fct(x):\n    return x * 2\nresult = list(map(fct, ['hello', 'world']))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>['hellohello', 'worldworld']</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>['hello*2', 'world*2']</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>['hello!', 'world']</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>['hello', 'world!']</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Prog fonctionnelle/zip",
        "questions": [
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2, 3], ['a', 'b', 'c']))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (3, 'c')]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 2, 3), ('a', 'b', 'c')]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[[1, 'a'], [2, 'b'], [3, 'c']]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>{(1, 'a'), (2, 'b'), (3, 'c')}</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de l'exécution du code suivant ?</p>\n<p> </p>\n<pre><code>result = list(zip([1, 2], ['a', 'b', 'c']))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b')]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (None, 'c')]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 2), ('a', 'b', 'c')]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (3, 'c')]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2, 3], ['a', 'b']))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b')]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (3, None)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 2, 3), ('a', 'b')]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (3, 'c')]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False]))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True), (2, 'b', False)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (True, False)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 2), ('a', 'b'), (True, False)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2, 3], ['a', 'b', 'c'], [True]))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (3, 'c')]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True), (2, 'b', None), (3, 'c', None)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True), (2, 'b', False)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b')]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (None, None)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 2), ('a', 'b')]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2, 3], ['a', 'b'], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b')]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (3, None)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 2, 3), ('a', 'b')]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True), (2, 'b', False)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (True, False)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True), (2, 'b', None)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a'), (2, 'b'), (True, None)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20]))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10), (2, 'b', False, 20)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True), (2, 'b', False)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10), (2, 'b', 20)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 2), ('a', 'b'), (True, False), (10, 20)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10]))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True), (2, 'b', False)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10), (2, 'b', None)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10), (2, 'b', False, 20)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True), (2, 'b', False)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10), (2, 'b', 20)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True), (2, 'b', False)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10), (2, 'b', None)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], [100, 200]))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100), (2, 'b', False, 20, 200)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10), (2, 'b', False, 20)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10, 100), (2, 'b', 20, 200)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], [100]))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10), (2, 'b', False, 20)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10, 100), (2, 'b', 20, None)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], [100, 200], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100), (2, 'b', False, 20, 200)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10), (2, 'b', False, 20)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10, 100), (2, 'b', 20, 200)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], [100], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10), (2, 'b', False, 20)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10, 100), (2, 'b', 20, None)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], [100, 200], [1000, 2000]))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100, 1000), (2, 'b', False, 20, 200, 2000)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100), (2, 'b', False, 20, 200)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10, 100, 1000), (2, 'b', 20, 200, 2000)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], [100, 200], [1000]))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100, 1000)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100), (2, 'b', False, 20, 200)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10, 100, 1000), (2, 'b', 20, 200, None)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], [100, 200], [1000, 2000], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100, 1000), (2, 'b', False, 20, 200, 2000)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100), (2, 'b', False, 20, 200)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10, 100, 1000), (2, 'b', 20, 200, 2000)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], [100, 200], [1000], strict=True))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100, 1000)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100), (2, 'b', False, 20, 200)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10, 100, 1000), (2, 'b', 20, 200, None)]</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "Quel est le résultat de l'exécution du code suivant ?\n<pre><code>result = list(zip([1, 2], ['a', 'b'], [True, False], [10, 20], [100, 200], [1000, 2000], [10000, 20000]))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100, 1000, 10000), (2, 'b', False, 20, 200, 2000, 20000)]</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<pre>[(1, 'a', True, 10, 100, 1000), (2, 'b', False, 20, 200, 2000)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>[(1, 'a', 10, 100, 1000, 10000), (2, 'b', 20, 200, 2000, 20000)]</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>Erreur, car les itérables n'ont pas la même longueur</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Comment zip() gère-t-il les itérables de longueurs différentes ?</p>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Il s'arrête quand le plus court itérable est épuisé</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Il lève une exception</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Il remplit avec None les éléments manquants</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Il ignore les éléments supplémentaires du plus long itérable et continue</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\nzipped = [(1, 'a'), (2, 'b'), (3, 'c')]\nnumbers, letters = zip(*zipped)\nprint(numbers, letters)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>(1, 2, 3) ('a', 'b', 'c')</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 2, 3] ['a', 'b', 'c']</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur TypeError</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[(1, 2, 3), ('a', 'b', 'c')]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\nkeys = ['nom', 'age', 'ville']\nvalues = ['Alice', 25, 'Paris']\nresult = dict(zip(keys, values))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>{'nom': 'Alice', 'age': 25, 'ville': 'Paris'}</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>{'Alice': 'nom', 25: 'age', 'Paris': 'ville'}</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[('nom', 'Alice'), ('age', 25), ('ville', 'Paris')]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur TypeError</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant :</p>\n<pre><code>\nnumbers = [1, 2, 3]\nletters = ['a', 'b', 'c']\nz = zip(numbers, letters)\nprint(list(z))\nprint(list(z))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Le deuxième print affiche une liste vide</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Le même résultat s'affiche deux fois</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Le programme plante</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur TypeError est levée</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat de ce code utilisant zip() avec enumerate() ?</p>\n<pre><code>\nletters = ['a', 'b', 'c']\nnumbers = [1, 2, 3]\nfor i, (letter, number) in enumerate(zip(letters, numbers)):\n    print(f\"{i}: {letter}-{number}\")\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<pre>0: a-1\n1: b-2\n2: c-3\n</pre>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Une erreur de syntaxe</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>1: a-1\n2: b-2\n3: c-3\n</pre>",
                        "fraction": 0
                    },
                    {
                        "text": "<pre>a-1\nb-2\nc-3\n</pre>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant :</p>\n<pre><code>\nresult = list(zip('abc', '123'))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[('a', '1'), ('b', '2'), ('c', '3')]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>['a1', 'b2', 'c3']</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[('abc', '123')]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur TypeError</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\nnumbers = [1, 2, 3, 4]\nresult = list(zip(numbers[:-1], numbers[1:]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[(1, 2), (2, 3), (3, 4)]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[(1, 2, 3), (2, 3, 4)]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[(1, 2), (3, 4)]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur d'index</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\nnumbers = [1, 2, 3]\nresult = list(zip(numbers))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[(1,), (2,), (3,)]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 2, 3]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur TypeError</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\nnumbers = range(5)\nresult = list(zip(numbers[::2], numbers[1::2]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[(0, 1), (2, 3)]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[(0, 1), (1, 2), (2, 3), (3, 4)]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[(0, 2), (1, 3), (2, 4)]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur d'index</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quel est le résultat du code suivant ?</p>\n<pre><code>\na = []\nb = [1, 2, 3]\nresult = list(zip(a, b))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[ ]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[(None, 1), (None, 2), (None, 3)]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Une erreur ValueError</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[(1,), (2,), (3,)]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    },
    {
        "category": "top/002_LURET Python_niveau2/Prog fonctionnelle/filter",
        "questions": [
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x % 2 == 0\n\nresult = list(filter(fonction_travail, [1, 2, 3, 4]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[2, 4]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 2, 3, 4]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1, 3]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[2, 3]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait la fonction `filter` dans le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &gt; 0\n\nresult = filter(fonction_travail, [-1, 0, 1, 2])\nprint(list(result))</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments positifs de la liste</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x % 2 != 0\n\nresult = list(filter(fonction_travail, [1, 2, 3, 4]))\nprint(result)</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[1, 3]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 2, 3, 4]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[2, 4]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1, 4]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x % 3 == 0\n\nresult = list(filter(fonction_travail, [1, 2, 3, 4, 5, 6]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[3, 6]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 2, 3, 4, 5, 6]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1, 3, 5]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[2, 4, 6]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &lt; 0\n\nresult = list(filter(fonction_travail, [-1, -2, 0, 1, 2]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments négatifs de la liste</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x % 5 == 0\n\nresult = list(filter(fonction_travail, [5, 10, 15, 20, 25]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[5, 10, 15, 20, 25]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[5, 15, 25]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[10, 20]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[5, 10, 15]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x == 0\n\nresult = list(filter(fonction_travail, [0, 1, 2, 3, 0]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[0, 0]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[0, 1, 2, 3, 0]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1, 2, 3]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[0]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait la fonction `filter` dans le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &gt; 10\n\nresult = filter(fonction_travail, [5, 15, 25, 35])\nprint(list(result))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments plus grands que 10</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &lt; 5\n\nresult = list(filter(fonction_travail, [1, 2, 3, 4, 5]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[1, 2, 3, 4]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 2, 3, 4, 5]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[2, 3, 4, 5]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1, 3, 5]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x == 1\n\nresult = list(filter(fonction_travail, [1, 0, 1, 2, 3]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[1, 1]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 0, 1, 2, 3]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[0, 2, 3]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1, 2]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x != 0\n\nresult = list(filter(fonction_travail, [0, 1, 2, 3, 0]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments différents de zéro</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &lt; 0\n\nresult = list(filter(fonction_travail, [-1, -2, 0, 1, 2]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[-1, -2]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[-1, -2, 0, 1, 2]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[0, 1, 2]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[-1, 0, 1]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x == 5\n\nresult = list(filter(fonction_travail, [5, 10, 15, 20, 25]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[5]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[5, 10, 15, 20, 25]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[10, 15, 20, 25]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[5, 15, 25]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait la fonction `filter` dans le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &gt; 20\n\nresult = filter(fonction_travail, [10, 20, 30, 40])\nprint(list(result))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments plus grands que 20</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &lt; 10\n\nresult = list(filter(fonction_travail, [5, 15, 25, 35]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[5]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[5, 15, 25, 35]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[15, 25, 35]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[5, 15]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x == 10\n\nresult = list(filter(fonction_travail, [10, 20, 30, 40]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[10]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[10, 20, 30, 40]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[20, 30, 40]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[10, 20]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x != 5\n\nresult = list(filter(fonction_travail, [5, 10, 15, 20, 25]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments différents de cinq</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &lt; 3\n\nresult = list(filter(fonction_travail, [1, 2, 3, 4, 5]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[1, 2]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[1, 2, 3, 4, 5]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[3, 4, 5]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[1, 3]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x == 3\n\nresult = list(filter(fonction_travail, [3, 6, 9, 12]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[3]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[3, 6, 9, 12]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[6, 9, 12]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[3, 9]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait la fonction `filter` dans le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &gt; 30\n\nresult = filter(fonction_travail, [20, 30, 40, 50])\nprint(list(result))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments plus grands que 30</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &lt; 20\n\nresult = list(filter(fonction_travail, [10, 20, 30, 40]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[10]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[10, 20, 30, 40]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[20, 30, 40]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[10, 20]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x == 20\n\nresult = list(filter(fonction_travail, [20, 40, 60, 80]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[20]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[20, 40, 60, 80]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[40, 60, 80]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[20, 40]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x != 10\n\nresult = list(filter(fonction_travail, [10, 20, 30, 40]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments différents de dix</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &lt; 50\n\nresult = list(filter(fonction_travail, [30, 40, 50, 60]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[30, 40]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[30, 40, 50, 60]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[50, 60]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[30, 50]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x == 50\n\nresult = list(filter(fonction_travail, [50, 100, 150, 200]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[50]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[50, 100, 150, 200]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[100, 150, 200]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[50, 100]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait la fonction `filter` dans le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &gt; 40\n\nresult = filter(fonction_travail, [30, 40, 50, 60])\nprint(list(result))\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments plus grands que 40</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &lt; 60\n\nresult = list(filter(fonction_travail, [40, 50, 60, 70]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[40, 50]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[40, 50, 60, 70]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[60, 70]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[40, 60]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle est la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x == 60\n\nresult = list(filter(fonction_travail, [60, 120, 180, 240]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[60]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[60, 120, 180, 240]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[120, 180, 240]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[60, 120]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Que fait le code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x != 20\n\nresult = list(filter(fonction_travail, [20, 40, 60, 80]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>Filtre les éléments différents de vingt</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>Multiplie chaque élément de la liste par 2</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Ajoute 1 à chaque élément de la liste</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>Trie les éléments de la liste</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            },
            {
                "text": "<p>Quelle sera la sortie du code suivant ?</p>\n<pre><code>\ndef fonction_travail(x):\n    return x &lt; 70\n\nresult = list(filter(fonction_travail, [50, 60, 70, 80]))\nprint(result)\n</code></pre>",
                "type": "multichoice",
                "answers": [
                    {
                        "text": "<p>[50, 60]</p>",
                        "fraction": 100
                    },
                    {
                        "text": "<p>[50, 60, 70, 80]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[70, 80]</p>",
                        "fraction": 0
                    },
                    {
                        "text": "<p>[50, 70]</p>",
                        "fraction": 0
                    }
                ],
                "matching_pairs": []
            }
        ]
    }
]